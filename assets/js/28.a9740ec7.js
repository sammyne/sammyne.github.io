(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{657:function(t,s,a){t.exports=a.p+"assets/img/compilation.3a0acaa3.png"},658:function(t,s,a){t.exports=a.p+"assets/img/virtual-memory-model.389ba05d.png"},659:function(t,s,a){t.exports=a.p+"assets/img/memory-model-with-pseudo-register.22f017de.png"},660:function(t,s,a){t.exports=a.p+"assets/img/func-stack-frame.dfbc45e0.png"},787:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("blockquote",[n("p",[t._v("原文："),n("a",{attrs:{href:"https://www.toutiao.com/i6871130035290374668/?tt_from=weixin&utm_campaign=client_share&wxshare_count=1&timestamp=1614597588&app=news_article&utm_source=weixin&utm_medium=toutiao_android&use_new_style=1&req_id=202103011919480101351210213C062CFC&share_token=de697031-cf45-4235-ac39-fce8a6c5f0fc&group_id=6871130035290374668",target:"_blank",rel:"noopener noreferrer"}},[t._v("万字详文：Golang 汇编入门知识总结，看这一篇就够了"),n("OutboundLink")],1)])]),t._v(" "),n("blockquote",[n("p",[t._v("本文使用 Go 版本为 1.16，具体环境是基于 golang:1.16-buster 起的容器。")])]),t._v(" "),n("h2",{attrs:{id:"_1-为什么需要汇编"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-为什么需要汇编"}},[t._v("#")]),t._v(" 1. 为什么需要汇编")]),t._v(" "),n("p",[t._v("众所周知，在计算机的世界里，只有 2 种类型：0 和 1。")]),t._v(" "),n("p",[t._v("计算机工作由一系列机器指令驱动。这些指令又是一组二进制数字，其对应计算机的高低电平。而这些机器指令的集合就是机器语言，这些机器语言在最底层是与硬件一一对应的。")]),t._v(" "),n("p",[t._v("显而易见，"),n("strong",[t._v("机器指令有一个致命的缺点：可阅读性太差")]),t._v("（恐怕也只有天才和疯子才有能力把控得了）。")]),t._v(" "),n("p",[t._v("为了解决可读性的问题以及代码编辑的需求，最接近机器的语言应运而生：汇编语言（汇编语言更像一种助记符，这些人们容易记住的每一条助记符都映射着一条不容易记住的由 0、1 组成的机器指令。可类比域名与 IP 地址的关系）。")]),t._v(" "),n("h3",{attrs:{id:"_1-1-程序的编译过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-程序的编译过程"}},[t._v("#")]),t._v(" 1.1 程序的编译过程")]),t._v(" "),n("p",[t._v("以 C 语言为例来说，从 hello.c 的源码文件到 hello 可执行文件，经过编译器处理，大致分为几个阶段：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(657),alt:"C 程序编译过程"}})]),t._v(" "),n("p",[t._v("编译器在不同的阶段会做不同的事情，但是有一步是可以确定的：源码会被编译成汇编，最后才是二进制。")]),t._v(" "),n("h2",{attrs:{id:"_2-程序与进程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-程序与进程"}},[t._v("#")]),t._v(" 2. 程序与进程")]),t._v(" "),n("p",[t._v("源码经过编译之后，得到一个二进制的可执行文件。文件这两个字也就表明，目前得到的这个文件跟其他文件对比，除了具有一定的格式（如 Linux 的 ELF 格式，即"),n("strong",[t._v("可运行可链接")]),t._v("（Executable Linkable Format））的二进制组成，并没什么区别。")]),t._v(" "),n("p",[t._v("Linux 的文件类型大致分为 7 种：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"right"}},[t._v("标识符")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("类型")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"right"}},[n("code",[t._v("b")])]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("块设备文件")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"right"}},[n("code",[t._v("c")])]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("字符设备文件")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"right"}},[n("code",[t._v("d")])]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("目录")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"right"}},[n("code",[t._v("-")])]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("普通文件")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"right"}},[n("code",[t._v("l")])]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("链接")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"right"}},[n("code",[t._v("s")])]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("socket")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"right"}},[n("code",[t._v("p")])]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("管道")])])])]),t._v(" "),n("p",[t._v("其中标识符一列的符号为 "),n("code",[t._v("ls")]),t._v(" 命令列出文件信息权限信息列（如下 go.mod 文件的 "),n("code",[t._v("-rw-r--r--")]),t._v("）的第 1 个字符")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("root@415bbc518ed6:/home/sammyne"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls -l")]),t._v("\ntotal "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1992")]),t._v("\n-rw-r--r-- "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" root root      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v(" Mar  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 08:08 go.mod\n-rwxr-xr-x "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" root root "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2027872")]),t._v(" Mar  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 08:08 hello-world\n-rw-r--r-- "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" root root      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("72")]),t._v(" Mar  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 08:08 main.go\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("p",[t._v("通过上面可以看到，可执行文件 hello-world 和源码文件 main.go 都是普通文件。（在 Unix 中有一句很经典的话：一切皆文件）。")]),t._v(" "),n("p",[t._v("那么，问题来了：")]),t._v(" "),n("ol",[n("li",[t._v("什么是程序？")]),t._v(" "),n("li",[t._v("什么是进程？")])]),t._v(" "),n("h3",{attrs:{id:"_2-1-程序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-程序"}},[t._v("#")]),t._v(" 2.1 程序")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A8%8B%E5%BA%8F",target:"_blank",rel:"noopener noreferrer"}},[t._v("维基百科"),n("OutboundLink")],1),t._v(" 告诉我们：程序是指一组指示计算机或其他具有消息处理能力设备每一步动作的指令，通常用某种程序设计语言编写，运行于某种目标体系结构上。")]),t._v(" "),n("p",[t._v("从某个层面来看，可以把程序分为静态程序和动态程序。")]),t._v(" "),n("ul",[n("li",[t._v("静态程序：单纯的指具有一定格式的可执行二进制文件。")]),t._v(" "),n("li",[t._v("动态程序：静态可执行程序文件被加载到内存之后的一种运行时模型（又称为进程）。")])]),t._v(" "),n("h3",{attrs:{id:"_2-2-进程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-进程"}},[t._v("#")]),t._v(" 2.2 进程")]),t._v(" "),n("p",[t._v("首先要知道的是，"),n("strong",[t._v("进程是分配系统资源的最小单位，线程（带有时间片的函数）是系统调度的最小单位")]),t._v("。进程包含线程，线程所属于进程。")]),t._v(" "),n("p",[t._v("创建进程一般使用 "),n("code",[t._v("fork")]),t._v(" 方法（通常会有个拉起程序，先 "),n("code",[t._v("fork")]),t._v(" 自身生成一个子进程。然后在该子进程中通过 "),n("code",[t._v("exec")]),t._v(" 函数把对应程序加载进来，进而启动目标进程。当然，实际上要复杂得多），而创建线程则是使用 pthread 线程库。")]),t._v(" "),n("p",[t._v("以 32 位 Linux 操作系统为例，进程经典的虚拟内存结构模型如下图所示：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(658),alt:"虚拟内存结构模型"}})]),t._v(" "),n("p",[t._v("其中，有两处结构是静态程序所不具有的，那就是运行时堆（heap）与运行时栈（stack）。")]),t._v(" "),n("p",[n("strong",[t._v("运行时堆从低地址向高地址增长")]),t._v("，申请的内存空间需要程序员自己或者由垃圾回收（GC）释放。运行时栈从高地址向低地址增长，内存空间在当前栈桢调用结束之后自动释放(并不是清除其所占用内存中数据，而是通过栈顶指针 "),n("code",[t._v("SP")]),t._v(" 的移动来标识哪些内存是正在使用的)。")]),t._v(" "),n("h2",{attrs:{id:"_3-go-汇编"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-go-汇编"}},[t._v("#")]),t._v(" 3. Go 汇编")]),t._v(" "),n("p",[t._v("对于 Go 编译器而言，其输出的结果是一种抽象可移植的汇编代码，这种汇编（Go 的汇编是基于 Plan9 的汇编）并不对应某种真实的硬件架构。Go 的汇编器会基于这种伪汇编为目标硬件生成具体的机器指令。")]),t._v(" "),n("p",[t._v("伪汇编这一个额外层可以带来很多好处，最主要的一点是方便将 Go 移植到新的架构。")]),t._v(" "),n("p",[t._v("相关的信息可以参考 Rob Pike 的 "),n("a",{attrs:{href:"https://www.youtube.com/watch?v=KINIAgRpkDA",target:"_blank",rel:"noopener noreferrer"}},[t._v("The Design of the Go Assembler"),n("OutboundLink")],1),t._v("（需要翻墙 😦）。")]),t._v(" "),n("blockquote",[n("p",[t._v("以下三段译自 Go 的官方文档 "),n("a",{attrs:{href:"https://golang.org/doc/asm",target:"_blank",rel:"noopener noreferrer"}},[t._v("A Quick Guide to Go's Assembler"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("了解 Go 的汇编器最重要的是要知道 Go 的汇编器不是对底层机器的直接表示，即 Go 的汇编器没有直接使用目标机器的汇编指令。Go 汇编器所用的指令，一部分与目标机器的指令一一对应，而另外一部分则不是。这是因为编译器套件不需要汇编器直接参与常规的编译过程。")]),t._v(" "),n("p",[t._v("相反，编译器使用了一种半抽象的指令集，并且部分指令是在代码生成后才被选择的。汇编器基于这种半抽象的形式工作，所以虽然你看到的是一条 "),n("code",[t._v("MOV")]),t._v(" 指令，但是工具链针对这条指令实际生成的可能完全不是一个移动指令，也许会是清除或者加载，也有可能是精确对应目标平台上同名的指令。"),n("strong",[t._v("概括来说，特定于机器的指令会以他们的本尊出现，然而对于一些通用的操作，如内存的移动以及子程序的调用以及返回通常都做了抽象")]),t._v("。细节因架构不同而不一样，我们对这样的不精确性表示歉意，情况并不明确。")]),t._v(" "),n("p",[t._v("汇编器程序的工作是对这样半抽象指令集进行解析并将其转变为可以输入到链接器的指令。")]),t._v(" "),n("p",[t._v("Go 汇编使用的是 "),n("strong",[t._v("caller-save模式")]),t._v("，被调用函数的入参参数、返回值都由调用者维护。因此，当需要调用一个函数时，需要先做好这些准备工作，才调用下一个函数，另外这些都需要进行内存对齐，对齐的大小是 "),n("code",[t._v("sizeof(uintptr)")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"_3-1-几个概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-几个概念"}},[t._v("#")]),t._v(" 3.1 几个概念")]),t._v(" "),n("p",[t._v("在深入了解 Go 汇编之前，需要知道的几个概念：")]),t._v(" "),n("ul",[n("li",[t._v("栈：进程、线程、goroutine 都有自己的调用栈，先进后出（FILO）")]),t._v(" "),n("li",[t._v("栈帧：可以理解是函数调用时，在栈上为函数所分配的内存区域")]),t._v(" "),n("li",[t._v("调用者：caller，比如：A 函数调用了 B 函数，那么 A 就是调用者")]),t._v(" "),n("li",[t._v("被调者：callee，比如：A 函数调用了 B 函数，那么 B 就是被调者")])]),t._v(" "),n("h3",{attrs:{id:"_3-2-go-的核心寄存器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-go-的核心寄存器"}},[t._v("#")]),t._v(" 3.2 Go 的核心寄存器")]),t._v(" "),n("p",[t._v("go 汇编中有 4 个核心的伪寄存器，这 4 个寄存器是编译器起到维护上下文、特殊标识等作用：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("简称")]),t._v(" "),n("th",[t._v("全称")]),t._v(" "),n("th",[t._v("作用")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("SB")]),t._v(" "),n("td",[t._v("Static Base Pointer")]),t._v(" "),n("td",[t._v("全局变量/变量")])]),t._v(" "),n("tr",[n("td",[t._v("FP")]),t._v(" "),n("td",[t._v("Frame Pointer")]),t._v(" "),n("td",[t._v("实参和局部变量")])]),t._v(" "),n("tr",[n("td",[t._v("PC")]),t._v(" "),n("td",[t._v("Program counter")]),t._v(" "),n("td",[t._v("跳转和分支")])]),t._v(" "),n("tr",[n("td",[t._v("SP")]),t._v(" "),n("td",[t._v("Stack Pointer")]),t._v(" "),n("td",[t._v("栈顶")])])])]),t._v(" "),n("ul",[n("li",[t._v("FP：使用如 "),n("code",[t._v("symbol+offset(FP)")]),t._v(" 的方式，引用 callee 函数的入参参数。例如 "),n("code",[t._v("arg0+0(FP)")]),t._v("，"),n("code",[t._v("arg1+8(FP)")]),t._v("，使用 FP 必须加 "),n("code",[t._v("symbol")]),t._v("，否则无法通过编译（从汇编层面来看，"),n("code",[t._v("symbol")]),t._v(" 没有什么用，"),n("strong",[t._v("加 "),n("code",[t._v("symbol")]),t._v(" 主要是为了提升代码可读性")]),t._v("）。另外需要注意的是：往往在编写 go 汇编代码时，要站在 callee 的角度来看 FP。在 callee 看来，FP 指向的是 caller 调用 callee 时传递的第一个参数的位置。假如当前的 callee 函数是 "),n("code",[t._v("add")]),t._v("，在  "),n("code",[t._v("add")]),t._v(" 的代码引用 FP，该 FP 指向的位置不在 callee 的栈帧（stack frame）之内。而是在 caller 的栈帧，指向调用 "),n("code",[t._v("add")]),t._v(" 函数时传递的第一个参数的位置，经常在 callee 中用 "),n("code",[t._v("symbol+offset(FP)")]),t._v(" 来获取入参的参数值。")]),t._v(" "),n("li",[t._v("SB：全局静态基指针，一般用在声明函数、全局变量中。")]),t._v(" "),n("li",[t._v("SP：该寄存器也是最具有迷惑性的寄存器，因为会有"),n("strong",[t._v("伪 SP 寄存器")]),t._v("和"),n("strong",[t._v("硬件 SP 寄存器")]),t._v("之分。Plan9 的这个伪 SP 寄存器指向当前栈帧第一个局部变量的结束位置（为什么说是结束位置，可以结合下面寄存器内存布局图来看），使用形如 "),n("code",[t._v("symbol+offset(SP)")]),t._v(" 的方式，引用函数的局部变量。"),n("code",[t._v("offset")]),t._v(" 的合法取值是 "),n("code",[t._v("[-framesize, 0)")]),t._v("，注意是个左闭右开的区间。假如局部变量都是 8 字节，那么第一个局部变量就可以用 "),n("code",[t._v("localvar0-8(SP)")]),t._v(" 来表示。与硬件寄存器 SP 是两个不同的东西，在栈帧 size 为 0 的情况下，伪寄存器 SP 和硬件寄存器 SP 指向同一位置。手写汇编代码时，如果是 "),n("code",[t._v("symbol+offset(SP)")]),t._v(" 形式，则表示伪寄存器 SP。如果是 "),n("code",[t._v("offset(SP)")]),t._v(" 则表示硬件寄存器 SP。\n"),n("ul",[n("li",[t._v("务必注意：对于编译输出（"),n("code",[t._v("go tool compile -S")]),t._v("/"),n("code",[t._v("go tool objdump")]),t._v("）的代码来讲，所有的 SP 都是硬件 SP 寄存器，无论是否带 "),n("code",[t._v("symbol")]),t._v("（这一点非常具有迷惑性，需要慢慢理解。往往在分析编译输出的汇编时，看到的就是硬件 SP 寄存器）。")])])]),t._v(" "),n("li",[t._v("PC：实际上就是在体系结构中常见的 pc 寄存器。在 x86 平台下对应 ip 寄存器，amd64 上则是 rip。除了个别跳转之外，手写 Plan9 汇编代码时，很少用到 PC 寄存器。")])]),t._v(" "),n("p",[t._v("还有一个后续部分会用到的伪寄存器 BP：指向当前栈帧的"),n("strong",[t._v("栈底")]),t._v("（SP 指向当前栈帧的"),n("strong",[t._v("栈顶")]),t._v("），函数栈的起始位置（Go 编译器会将函数栈空间自动加 8，用于存储 BP 寄存器，跳过这 8 字节后才是函数栈上局部变量的内存）。")]),t._v(" "),n("p",[t._v("通过上面的讲解，希望看官能够对 4 个核心寄存器的区别有了一定的认识（或者是更加的迷惑、一头雾水）。需要留意的是：分析编译输出的汇编代码时，要重点看 SP 和 SB 寄存器（FP 寄存器在这里是看不到的）。手写汇编代码时，则要重点看 FP 和 SP 寄存器。")]),t._v(" "),n("h4",{attrs:{id:"_3-2-1-伪寄存器的内存模型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-伪寄存器的内存模型"}},[t._v("#")]),t._v(" 3.2.1 伪寄存器的内存模型")]),t._v(" "),n("p",[t._v("下图描述了栈桢与各个寄存器的内存关系模型，值得注意的是要站在 callee 的角度来看。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(659),alt:""}})]),t._v(" "),n("p",[t._v("有一点需要注意的是："),n("code",[t._v("return addr")]),t._v(" 是在 caller 的栈上的，不过往栈上插 "),n("code",[t._v("return addr")]),t._v(" 的过程是由 "),n("code",[t._v("CALL")]),t._v(" 指令完成的（在分析汇编时，是看不到关于 addr 相关空间信息的。在分配栈空间时，addr 所占用空间大小不包含在栈帧内）。")]),t._v(" "),n("p",[t._v("在 AMD64 环境，伪 PC 寄存器其实是 IP 指令计数器寄存器的别名。伪 FP 寄存器对应的是 caller 函数的帧指针，一般用来访问 callee 函数的入参参数和返回值。伪 SP 栈指针对应的是当前 callee 函数栈帧的底部（不包括参数和返回值部分），一般用于定位局部变量。伪 SP 是一个比较特殊的寄存器，因为还存在一个同名的 SP 真寄存器，真 SP 寄存器对应栈的顶部。")]),t._v(" "),n("p",[t._v("编写 Go 汇编需要区分伪寄存器和真寄存器的时候只需要记住一点："),n("strong",[t._v("伪寄存器一般需要一个标识符和偏移量为前缀，如果没有标识符前缀则是真寄存器")]),t._v("。比如 "),n("code",[t._v("(SP)")]),t._v("、"),n("code",[t._v("+8(SP)")]),t._v("没有标识符前缀为真 SP 寄存器，而 "),n("code",[t._v("a(SP)")]),t._v("、"),n("code",[t._v("b+8(SP)")]),t._v("有标识符为前缀表示伪寄存器。")]),t._v(" "),n("h4",{attrs:{id:"_3-2-2-几点说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-几点说明"}},[t._v("#")]),t._v(" 3.2.2 几点说明")]),t._v(" "),n("p",[t._v("我们这里对容易混淆的几点简单进行说明：")]),t._v(" "),n("ul",[n("li",[t._v("伪 SP 和硬件 SP 不是一回事，在手写汇编代码时，伪 SP 和硬件 SP 的区分方法是看该 SP 前是否有 symbol。如果有 symbol，那么即为伪寄存器，如果没有，那么说明是硬件 SP 寄存器。")]),t._v(" "),n("li",[t._v("伪 SP 和 FP 的相对位置是会变的，所以不应该尝试用伪 SP 寄存器去找那些用 FP+offset 来引用的值，例如函数的入参和返回值。")]),t._v(" "),n("li",[n("code",[t._v("go tool objdump")]),t._v("/"),n("code",[t._v("go tool compile -S")]),t._v(" 输出的代码没有伪 SP 和 FP 寄存器。我们上面说的区分伪 SP 和硬件 SP 寄存器的方法，对于上述两个命令的输出结果是没法使用的。在编译和反汇编的结果中，只有真实的 SP 寄存器。")]),t._v(" "),n("li",[t._v("FP 和 Go 的官方源代码里的 frame pointer 不是一回事，源代码里的 frame pointer 指的是 caller BP 寄存器的值，在这里和 caller 的伪 SP 是值是相等的。")])]),t._v(" "),n("h4",{attrs:{id:"_3-2-3-ia64-和-plan9-的对应关系"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3-ia64-和-plan9-的对应关系"}},[t._v("#")]),t._v(" 3.2.3 IA64 和 Plan9 的对应关系")]),t._v(" "),n("p",[t._v("在 Plan9 汇编里还可以直接使用的 amd64 的通用寄存器，应用代码层面会用到的通用寄存器主要是："),n("code",[t._v("rax")]),t._v("、"),n("code",[t._v("rbx")]),t._v("、"),n("code",[t._v("rcx")]),t._v("、"),n("code",[t._v("rdx")]),t._v("、"),n("code",[t._v("rdi")]),t._v("、"),n("code",[t._v("rsi")]),t._v("、"),n("code",[t._v("r8")]),t._v("~"),n("code",[t._v("r15")]),t._v(" 这些寄存器，虽然 "),n("code",[t._v("rbp")]),t._v(" 和 "),n("code",[t._v("rsp")]),t._v(" 也可以用，不过 "),n("code",[t._v("bp")]),t._v(" 和 "),n("code",[t._v("sp")]),t._v(" 会被用来管理栈顶和栈底，最好不要拿来进行运算。")]),t._v(" "),n("p",[t._v("Plan9 中使用寄存器不需要带 "),n("code",[t._v("r")]),t._v(" 或 "),n("code",[t._v("e")]),t._v(" 前缀，例如 "),n("code",[t._v("rax")]),t._v("，只要写 "),n("code",[t._v("AX")]),t._v(" 即可："),n("code",[t._v("MOVQ $101, AX = mov rax, 101")])]),t._v(" "),n("p",[t._v("下面是通用通用寄存器的名字在 IA64 和 Plan9 中的对应关系:")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("x86_64")]),t._v(" "),n("th",[n("code",[t._v("rax")])]),t._v(" "),n("th",[n("code",[t._v("rbx")])]),t._v(" "),n("th",[n("code",[t._v("rcx")])]),t._v(" "),n("th",[n("code",[t._v("rdx")])]),t._v(" "),n("th",[n("code",[t._v("rdi")])]),t._v(" "),n("th",[n("code",[t._v("rsi")])]),t._v(" "),n("th",[n("code",[t._v("rbp")])]),t._v(" "),n("th",[n("code",[t._v("rsp")])]),t._v(" "),n("th",[n("code",[t._v("r8")])]),t._v(" "),n("th",[n("code",[t._v("r9")])]),t._v(" "),n("th",[n("code",[t._v("r10")])]),t._v(" "),n("th",[n("code",[t._v("r11")])]),t._v(" "),n("th",[n("code",[t._v("r12")])]),t._v(" "),n("th",[n("code",[t._v("r13")])]),t._v(" "),n("th",[n("code",[t._v("r14")])]),t._v(" "),n("th",[n("code",[t._v("rip")])])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("Plan9")]),t._v(" "),n("td",[n("code",[t._v("AX")])]),t._v(" "),n("td",[n("code",[t._v("BX")])]),t._v(" "),n("td",[n("code",[t._v("CX")])]),t._v(" "),n("td",[n("code",[t._v("DX")])]),t._v(" "),n("td",[n("code",[t._v("DI")])]),t._v(" "),n("td",[n("code",[t._v("SI")])]),t._v(" "),n("td",[n("code",[t._v("BP")])]),t._v(" "),n("td",[n("code",[t._v("SP")])]),t._v(" "),n("td",[n("code",[t._v("R8")])]),t._v(" "),n("td",[n("code",[t._v("R9")])]),t._v(" "),n("td",[n("code",[t._v("R10")])]),t._v(" "),n("td",[n("code",[t._v("R11")])]),t._v(" "),n("td",[n("code",[t._v("R12")])]),t._v(" "),n("td",[n("code",[t._v("R13")])]),t._v(" "),n("td",[n("code",[t._v("R14")])]),t._v(" "),n("td",[n("code",[t._v("PC")])])])])]),t._v(" "),n("h3",{attrs:{id:"_3-3-常用操作指令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-常用操作指令"}},[t._v("#")]),t._v(" 3.3 常用操作指令")]),t._v(" "),n("p",[t._v("下面列出了常用的几个汇编指令（指令后缀 "),n("code",[t._v("Q")]),t._v(" 说明是 64 位的汇编指令）。")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("助记符指令")]),t._v(" "),n("th",[t._v("种类")]),t._v(" "),n("th",[t._v("用途")]),t._v(" "),n("th",[t._v("示例")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("code",[t._v("MOVQ")])]),t._v(" "),n("td",[t._v("传送")]),t._v(" "),n("td",[t._v("数据传送")]),t._v(" "),n("td",[n("code",[t._v("MOVQ 48, AX")]),t._v(" 把 48 传送到 "),n("code",[t._v("AX")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("LEAQ")])]),t._v(" "),n("td",[t._v("传送")]),t._v(" "),n("td",[t._v("地址传送")]),t._v(" "),n("td",[n("code",[t._v("LEAQ AX, BX")]),t._v(" 把 "),n("code",[t._v("AX")]),t._v(" 有效地址传送到 "),n("code",[t._v("BX")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("PUSHQ")])]),t._v(" "),n("td",[t._v("传送")]),t._v(" "),n("td",[t._v("栈压入")]),t._v(" "),n("td",[n("code",[t._v("PUSHQ AX")]),t._v(" 将 "),n("code",[t._v("AX")]),t._v(" 的内容送入栈顶位置")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("POPQ")])]),t._v(" "),n("td",[t._v("传送")]),t._v(" "),n("td",[t._v("栈弹出")]),t._v(" "),n("td",[n("code",[t._v("POPQ AX")]),t._v(" 弹出栈顶数据后修改栈顶指针")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("ADDQ")])]),t._v(" "),n("td",[t._v("运算")]),t._v(" "),n("td",[t._v("相加并赋值")]),t._v(" "),n("td",[n("code",[t._v("ADDQ BX, AX")]),t._v(" 等价于 "),n("code",[t._v("AX+=BX")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("SUBQ")])]),t._v(" "),n("td",[t._v("运算")]),t._v(" "),n("td",[t._v("相减并赋值")]),t._v(" "),n("td",[n("code",[t._v("SUBQ BX, AX")]),t._v(" 等价于 "),n("code",[t._v("AX-=BX")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("CMPQ")])]),t._v(" "),n("td",[t._v("运算")]),t._v(" "),n("td",[t._v("比较大小")]),t._v(" "),n("td",[n("code",[t._v("CMPQ SI CX")]),t._v(" 比较 "),n("code",[t._v("SI")]),t._v(" 和 "),n("code",[t._v("CX")]),t._v(" 的大小")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("CALL")])]),t._v(" "),n("td",[t._v("转移")]),t._v(" "),n("td",[t._v("调用函数")]),t._v(" "),n("td",[n("code",[t._v("CALL runtime.printnl(SB)")]),t._v(" 发起调用")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("JMP")])]),t._v(" "),n("td",[t._v("转移")]),t._v(" "),n("td",[t._v("无条件转移指令")]),t._v(" "),n("td",[n("code",[t._v("JMP 0x0185")]),t._v(" 无条件转至 0x0185 地址处")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("JLS")])]),t._v(" "),n("td",[t._v("转移")]),t._v(" "),n("td",[t._v("条件转移指令")]),t._v(" "),n("td",[n("code",[t._v("JLS 0x0185")]),t._v(" 左边小于右边，则跳到 0x0185")])])])]),t._v(" "),n("h2",{attrs:{id:"_4-汇编分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-汇编分析"}},[t._v("#")]),t._v(" 4. 汇编分析")]),t._v(" "),n("p",[t._v("说了那么多，看看代码吧。")]),t._v(" "),n("h3",{attrs:{id:"_4-1-如何输出-go-汇编"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-如何输出-go-汇编"}},[t._v("#")]),t._v(" 4.1 如何输出 Go 汇编")]),t._v(" "),n("p",[t._v("对于写好的 go 源码，生成对应的 Go 汇编，大概有下面几种")]),t._v(" "),n("ol",[n("li",[t._v("先使用 "),n("code",[t._v('go build -gcflags "-N -l" main.go')]),t._v(" 生成对应的可执行二进制文件，再使用 "),n("code",[t._v('go tool objdump -s "main." main')]),t._v(" 反编译获取对应的汇编。\n"),n("ul",[n("li",[t._v("反编译时，"),n("code",[t._v('"main."')]),t._v(" 表示只输出 main 包中相关的汇编，"),n("code",[t._v('"main.main"')]),t._v("则表示只输出 "),n("code",[t._v("main")]),t._v(" 包中 "),n("code",[t._v("main")]),t._v(" 方法相关的汇编")])])]),t._v(" "),n("li",[t._v("使用 "),n("code",[t._v("go tool compile -S -N -l main.go")]),t._v(" 这种方式直接输出汇编")]),t._v(" "),n("li",[t._v("使用 "),n("code",[t._v('go build -gcflags="-N -l -S" main.go')]),t._v(" 直接输出汇编")])]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"title"},[t._v("注意事项")]),n("p",[t._v("在使用这些命令时，加上对应的 "),n("code",[t._v("flag")]),t._v("，否则某些逻辑会被编译器优化掉，而看不到对应完整的汇编代码。标识符的作用分别为："),n("code",[t._v("-l")]),t._v(" 禁止内联，"),n("code",[t._v("-N")]),t._v(" 禁止优化，"),n("code",[t._v("-S")]),t._v(" 输出汇编代码。")])]),n("h3",{attrs:{id:"_4-2-go-汇编示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-go-汇编示例"}},[t._v("#")]),t._v(" 4.2 Go 汇编示例")]),t._v(" "),n("p",[t._v("go 示例代码")]),t._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tsum "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不设置该局部变量 sum，add 栈空间大小会是 0")]),t._v("\n\tsum "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sum\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br")])]),n("p",[t._v("编译 go 源代码，输出汇编")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("root@415bbc518ed6:/home/sammyne/hello-world"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# go tool compile -N -l -S main.go")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[t._v("截取主要汇编如下：")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(".add STEXT nosplit "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("args")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("0x18 "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("locals")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("0x10 "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("funcid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("0x0\n\t0x0000 00000 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tTEXT\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(".add"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", NOSPLIT"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ABIInternal, "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$16")]),t._v("-24\n\t0x0000 00000 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tSUBQ\t"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$16")]),t._v(", SP\n\t0x0004 00004 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tMOVQ\tBP, "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t0x0009 00009 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tLEAQ\t"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", BP\n\t0x000e 00014 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tFUNCDATA\t"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$0")]),t._v(", gclocals·33cdeccccebe80329f1fdbee7f5874cb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t0x000e 00014 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tFUNCDATA\t"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(", gclocals·33cdeccccebe80329f1fdbee7f5874cb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t0x000e 00014 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tMOVQ\t"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$0")]),t._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(".~r2+40"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t0x0017 00023 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:4"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tMOVQ\t"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$0")]),t._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(".sum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t0x001f 00031 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tMOVQ\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(".a+24"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", AX\n\t0x0024 00036 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tADDQ\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(".b+32"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", AX\n\t0x0029 00041 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tMOVQ\tAX, "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(".sum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t0x002d 00045 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tMOVQ\tAX, "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(".~r2+40"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t0x0032 00050 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tMOVQ\t"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", BP\n\t0x0037 00055 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tADDQ\t"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$16")]),t._v(", SP\n\t0x003b 00059 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tRET\n\t0x0000 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("48")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("83")]),t._v(" ec "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("48")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("89")]),t._v(" 6c "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" 08 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("48")]),t._v(" 8d 6c "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" 08 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("48")]),t._v(" c7  H"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".H.l$.H.l$.H.\n\t0x0010 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v(" 00 00 00 00 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("48")]),t._v(" c7 04 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" 00 00 00 00 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("48")]),t._v("  D"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("H"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("$"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("H\n\t0x0020 8b "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("48")]),t._v(" 03 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("48")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("89")]),t._v(" 04 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("48")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("89")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),t._v("  .D$.H.D$ H"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$H")]),t._v(".D\n\t0x0030 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("48")]),t._v(" 8b 6c "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" 08 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("48")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("83")]),t._v(" c4 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" c3              "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$(")]),t._v("H.l$.H"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(".main STEXT "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("args")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("0x0 "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("locals")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("0x28 "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("funcid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("0x0\n\t0x0000 00000 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:9"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tTEXT\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(".main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", ABIInternal, "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$40")]),t._v("-0\n\t0x0000 00000 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:9"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tMOVQ\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TLS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", CX\n\t0x0009 00009 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:9"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tCMPQ\tSP, "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CX"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t0x000d 00013 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:9"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tPCDATA\t"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$0")]),t._v(", $-2\n\t0x000d 00013 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:9"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tJLS\t"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v("\n\t0x000f 00015 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:9"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tPCDATA\t"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$0")]),t._v(", $-1\n\t0x000f 00015 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:9"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tSUBQ\t"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$40")]),t._v(", SP\n\t0x0013 00019 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:9"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tMOVQ\tBP, "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t0x0018 00024 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:9"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tLEAQ\t"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", BP\n\t0x001d 00029 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:9"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tFUNCDATA\t"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$0")]),t._v(", gclocals·33cdeccccebe80329f1fdbee7f5874cb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t0x001d 00029 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:9"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tFUNCDATA\t"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(", gclocals·33cdeccccebe80329f1fdbee7f5874cb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t0x001d 00029 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tMOVQ\t"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(", "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t0x0025 00037 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tMOVQ\t"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v(", "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t0x002e 00046 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tPCDATA\t"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(", "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$0")]),t._v("\n\t0x002e 00046 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tCALL\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(".add"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t0x0033 00051 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tMOVQ\t"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", AX\n\t0x0038 00056 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tMOVQ\tAX, "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("autotmp_0+24"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t0x003d 00061 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tNOP\n\t0x0040 00064 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tCALL\truntime.printlock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t0x0045 00069 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tMOVQ\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("autotmp_0+24"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", AX\n\t0x004a 00074 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tMOVQ\tAX, "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t0x004e 00078 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tCALL\truntime.printint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t0x0053 00083 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tCALL\truntime.printnl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t0x0058 00088 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tCALL\truntime.printunlock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t0x005d 00093 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:11"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tMOVQ\t"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", BP\n\t0x0062 00098 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:11"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tADDQ\t"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$40")]),t._v(", SP\n\t0x0066 00102 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main.go:11"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\tRET\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br")])]),n("p",[t._v("这里列举了一个简单的 "),n("code",[t._v("int")]),t._v(" 类型加法示例，实际开发中会遇到各种参数类型，要复杂的多，这里只是抛砖引玉 😃")]),t._v(" "),n("h3",{attrs:{id:"_4-3-go-汇编解析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-go-汇编解析"}},[t._v("#")]),t._v(" 4.3 Go 汇编解析")]),t._v(" "),n("p",[t._v("接下来分析一下上一节输出的汇编重要核心代码。")]),t._v(" "),n("h4",{attrs:{id:"_4-3-1-add-函数汇编解析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-add-函数汇编解析"}},[t._v("#")]),t._v(" 4.3.1 "),n("code",[t._v("add")]),t._v(" 函数汇编解析")]),t._v(" "),n("ul",[n("li",[n("code",[t._v('TEXT "".add(SB), NOSPLIT|ABIInternal, $16-24')]),t._v(" "),n("ul",[n("li",[n("code",[t._v('TEXT "".add(SB) TEXT')]),t._v(" 指令声明 "),n("code",[t._v('"".add')]),t._v(" 是 "),n("code",[t._v(".text")]),t._v(" 代码段的一部分，并表明跟在这个声明后的是函数主体。在链接期，"),n("code",[t._v('""')]),t._v("这个空字符会被替换为当前的包名，也就是说："),n("code",[t._v('"".add')]),t._v("在链接到二进制文件后会变成 "),n("code",[t._v("main.add")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("SB")]),t._v(" 是一个虚拟的伪寄存器，保存静态基地址（static-base）指针，即程序地址空间的开始地址。"),n("code",[t._v('"".add(SB)')]),t._v(" 表明符号位于某个固定的相对地址空间起始处的偏移位置（最终是由连接器计算得到的）。换句话来讲，它有一个直接的绝对地址，是一个全局的函数符号。")]),t._v(" "),n("li",[n("code",[t._v("NOSPLIT")]),t._v("向编译器表明不应该插入 stack-split 用来检查栈需要扩张的前导指令。对于 "),n("code",[t._v("add")]),t._v(" 函数，编译器帮我们插入了这个标记：它足够聪明地意识到，由于 "),n("code",[t._v("add")]),t._v(" 没有任何局部变量且没有自己的栈帧，所以一定不会超出当前的栈。不然，每次调用函数时，在这里执行栈检查就是完全浪费 CPU 时间。")]),t._v(" "),n("li",[n("code",[t._v("$16-24")]),t._v(" "),n("ul",[n("li",[t._v("16 = size(BP) + size(sum)")]),t._v(" "),n("li",[t._v("24 指定调用方传入的参数和返回值的总大小（24 字节=入参 "),n("code",[t._v("a")]),t._v("、"),n("code",[t._v("b")]),t._v(" 大小（8 字节）*2 + 返回值（8字节））")])])]),t._v(" "),n("li",[n("a",{attrs:{href:"https://golang.org/doc/asm",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go 官方文档"),n("OutboundLink")],1),t._v(" 特地说明：通常来讲，帧大小后一般都跟随着一个参数大小，用减号分隔。(这不是一个减法操作，只是一种特殊的语法) 帧大小 "),n("code",[t._v("$24-8")]),t._v(" 意味着这个函数有 24 个字节的帧以及 8 个字节的参数，位于调用者的栈帧上。如果 "),n("code",[t._v("NOSPLIT")]),t._v(" 没有在 "),n("code",[t._v("TEXT")]),t._v(" 中指定，则必须提供参数大小。对于 Go 原型的汇编函数，"),n("code",[t._v("go vet")]),t._v(" 会检查参数大小是否正确。")])])]),t._v(" "),n("li",[n("code",[t._v("SUBQ $16, SP")]),t._v("："),n("code",[t._v("SP")]),t._v(" 为栈顶指针，该语句等价于 "),n("code",[t._v("SP-=16")]),t._v("（由于栈空间是向下增长的，所以开辟栈空间时为减操作），表示生成 16 字节大小的栈空间。")]),t._v(" "),n("li",[n("code",[t._v("LEAQ 8(SP), BP")]),t._v("：将 "),n("code",[t._v("8(SP)")]),t._v(" 这个地址而不是存储的内容存储到 "),n("code",[t._v("BP")]),t._v("。"),n("code",[t._v("LEA")]),t._v(' 的全称是 "Load Effective Address"。')]),t._v(" "),n("li",[n("code",[t._v('MOVQ $0, "".~r2+40(SP)')]),t._v(" "),n("ul",[n("li",[t._v("此时的 "),n("code",[t._v("SP")]),t._v(" 为 "),n("code",[t._v("add")]),t._v(" 函数栈的栈顶指针，"),n("code",[t._v("40(SP)")]),t._v(" 的位置则是 "),n("code",[t._v("add")]),t._v(" 返回值的位置，该位置位于 "),n("code",[t._v("main")]),t._v(" 函数栈空间内。")]),t._v(" "),n("li",[t._v("该语句设置返回值类型的 0 值，即初始化返回值，防止得到脏数据（返回值类型为 "),n("code",[t._v("int")]),t._v("，"),n("code",[t._v("int")]),t._v(" 的 0 值为 0）。")])])]),t._v(" "),n("li",[n("code",[t._v('MOVQ "".a+24(SP)')]),t._v("："),n("code",[t._v("AX")]),t._v(" 从 "),n("code",[t._v("main")]),t._v(" 函数栈空间获取入参 "),n("code",[t._v("a")]),t._v(" 的值，存到寄存器 "),n("code",[t._v("AX")]),t._v(" "),n("ul",[n("li",[t._v("参数是反序传入的，所以第一个参数 "),n("code",[t._v("a")]),t._v(" 和低地址的"),n("strong",[t._v("栈顶")]),t._v("距离最近。")])])]),t._v(" "),n("li",[n("code",[t._v('ADDQ "".b+32(SP)')]),t._v("："),n("code",[t._v("AX")]),t._v(" 从 "),n("code",[t._v("main")]),t._v(" 函数栈空间获取入参 "),n("code",[t._v("b")]),t._v(" 的值，与寄存器 "),n("code",[t._v("AX")]),t._v(" 存储的 a 值相加，结果存到  "),n("code",[t._v("AX")]),t._v("，相当于 "),n("code",[t._v("AX=a+b")])]),t._v(" "),n("li",[n("code",[t._v('MOVQ AX, "".~r2+40(SP)')]),t._v("：把 "),n("code",[t._v("a+b")]),t._v(" 的结果放到 "),n("code",[t._v("main")]),t._v(" 函数栈中 "),n("code",[t._v("add(a+b)")]),t._v(" 返回值所在的位置")]),t._v(" "),n("li",[n("code",[t._v("ADDQ $16, SP")]),t._v("：归还 "),n("code",[t._v("add")]),t._v(" 函数占用的栈空间")])]),t._v(" "),n("h4",{attrs:{id:"_4-3-2-函数栈桢结构模型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-函数栈桢结构模型"}},[t._v("#")]),t._v(" 4.3.2 函数栈桢结构模型")]),t._v(" "),n("p",[n("a",{attrs:{href:"#_4-2-go-%E6%B1%87%E7%BC%96%E7%A4%BA%E4%BE%8B"}},[t._v("4.2 节")]),t._v(" 所示汇编代码的函数栈桢结构模型如下")]),t._v(" "),n("p",[n("img",{attrs:{src:a(660),alt:""}})]),t._v(" "),n("p",[t._v("还记得前面提到的，Go 汇编使用的是 caller-save 模式，被调用函数的参数、返回值和栈位置都需要由调用者维护吗？")]),t._v(" "),n("p",[t._v("在函数栈桢结构中可以看到，"),n("code",[t._v("add()")]),t._v(" 函数的入参以及返回值都由调用者 "),n("code",[t._v("main()")]),t._v(" 函数维护。也正是因为如此，Go 有了其他语言不具有的，支持多个返回值的特性。")]),t._v(" "),n("h3",{attrs:{id:"_4-4-go-汇编语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-go-汇编语法"}},[t._v("#")]),t._v(" 4.4 Go 汇编语法")]),t._v(" "),n("p",[t._v("这里重点讲一下函数声明、变量声明。")]),t._v(" "),n("h4",{attrs:{id:"_4-4-1-函数声明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-1-函数声明"}},[t._v("#")]),t._v(" 4.4.1 函数声明")]),t._v(" "),n("p",[t._v("来看一个典型的 Go 汇编函数定义")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('// func add(a, b int) int\n// 该add函数声明定义在同一个 package name 下的任意 .go文件中\n// 只有函数头，没有实现\n\n// add函数的Go汇编实现\n// pkgname 默认是  ""\nTEXT pkgname·add(SB), NOSPLIT, $16-24\n    MOVQ a+0(FP), AX\n    ADDQ b+8(FP), AX\n    MOVQ AX, ret+16(FP)\n    RET\n\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br")])]),n("blockquote",[n("p",[t._v("注意：最后有一个必须的空行。")])]),t._v(" "),n("p",[t._v("Go 汇编实现为什么是 "),n("code",[t._v("TEXT")]),t._v(" 开头？仔细观察上面的进程内存布局图就会发现，我们的代码在是存储在 "),n("code",[t._v(".text")]),t._v(" 段的，这里也就是一种约定俗成的起名方式。实际上在 Plan9 中 "),n("code",[t._v("TEXT")]),t._v(" 是一个指令，用来定义一个函数。")]),t._v(" "),n("p",[t._v("定义中的 "),n("code",[t._v("pkgname")]),t._v(" 可以省略（非想写也可以写上，不过写上 "),n("code",[t._v("pkgname")]),t._v(" 的话，在重命名包名后还需要改代码，默认为 "),n("code",[t._v('""')]),t._v("），编译器会在链接期自动加上所属的包名称。")]),t._v(" "),n("p",[t._v("中点 "),n("code",[t._v("·")]),t._v(" 比较特殊，是一个 unicode 的中点，该点在 mac 下的输入方法是 "),n("code",[t._v("option + shift + 9")]),t._v("。在程序被链接之后，所有的中点 "),n("code",[t._v("·")]),t._v(" 都会被替换为句号 "),n("code",[t._v(".")]),t._v("，比如方法是 "),n("code",[t._v("runtime·main")]),t._v("，在编译之后的程序里的符号则是 "),n("code",[t._v("runtime.main")]),t._v("。")]),t._v(" "),n("p",[t._v("简单总结一下, Go 汇编实现函数声明，格式为:")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(" 静态基地址（static-base）指针\n                  |\n                  |         add 函数入参 + 返回值总大小\n                  |               |\nTEXT pkgname·add(SB),NOSPLIT,$16-24\n      |      |                |\n函数所属包名  函数名       add 函数栈帧大小\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("ul",[n("li",[t._v("函数栈帧大小：局部变量加上可能需要的额外调用函数的参数空间的总大小，不包括调用其它函数时的 "),n("code",[t._v("ret address")]),t._v(" 的大小。")]),t._v(" "),n("li",[n("code",[t._v("(SB)")]),t._v("：SB 是一个虚拟寄存器，保存了静态基地址（static-base）指针，即我们程序地址空间的开始地址。"),n("code",[t._v('"".add(SB)')]),t._v(" 表明符号位于某个固定的相对地址空间起始处的偏移位置（最终是由链接器计算得到的）。换句话来讲，它有一个直接的绝对地址，是一个全局的函数符号。")]),t._v(" "),n("li",[n("code",[t._v("NOSPLIT")]),t._v(" 向编译器表明，不应该插入 stack-split 用来检查栈需要扩张的前导指令。对于"),n("code",[t._v("add")]),t._v(" 函数，编译器帮我们插入了这个标记，它足够聪明地意识到 "),n("code",[t._v("add")]),t._v(" 不会超出当前的栈，因此没必要调用函数时在这里执行栈检查。")])]),t._v(" "),n("h4",{attrs:{id:"_4-4-2-变量声明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-2-变量声明"}},[t._v("#")]),t._v(" 4.4.2 变量声明")]),t._v(" "),n("p",[t._v("汇编里的全局变量，一般是存储在 "),n("code",[t._v(".rodata")]),t._v(" 或者 "),n("code",[t._v(".data")]),t._v(" 段。对应到 Go 代码，就是已初始化过的全局的常量和变量。使用 "),n("code",[t._v("DATA")]),t._v(" 结合 "),n("code",[t._v("GLOBL")]),t._v(" 来定义一个变量。")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("DATA")]),t._v(" 的用法为 "),n("code",[t._v("DATA symbol+offset(SB)/width, value")]),t._v("。大多数参数都是字面意思，不过这个 "),n("code",[t._v("offset")]),t._v(" 需要注意：其含义是该值相对于符号 "),n("code",[t._v("symbol")]),t._v(" 的偏移，而不是相对于全局某个地址的偏移。")]),t._v(" "),n("li",[n("code",[t._v("GLOBL ·symbol(SB), width")]),t._v(" 汇编指令用于定义名为 "),n("code",[t._v("symbol")]),t._v(" 的全局变量，变量对应的内存宽度为 "),n("code",[t._v("width")]),t._v("，内存宽度部分必须用常量初始化。")])]),t._v(" "),n("p",[n("code",[t._v("GLOBL")]),t._v(" 必须跟在 "),n("code",[t._v("DATA")]),t._v(" 指令之后，下面是定义了多个变量的例子：")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('DATA ·age+0(SB)/4, $8  ;; 数值 8 为 4 字节\nGLOBL ·age(SB), RODATA, $4\n\nDATA ·pi+0(SB)/8, $3.1415926 ;; 数值3.1415926为float64, 8字节\nGLOBL ·pi(SB), RODATA, $8\n\nDATA ·year+0(SB)/4, $2020 ;; 数值2020为 4字节\nGLOBL ·year(SB), RODATA, $4\n\n\n;; 变量 hello 使用 2 个 DATA 来定义\nDATA ·hello+0(SB)/8, $"hello my" ;; `hello my` 共8个字节\nDATA ·hello+8(SB)/8, $"   world" ;; `   world` 共8个字节(3个空格)\nGLOBL ·hello(SB), RODATA, $16 ;; `hello my   world`  共16个字节\n\n\nDATA ·hello<>+0(SB)/8, $"hello my" ;; `hello my` 共8个字节\nDATA ·hello<>+8(SB)/8, $"   world" ;; `   world` 共8个字节(3个空格)\nGLOBL ·hello<>(SB), RODATA, $16 ;; `hello my   world`  共16个字节\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br")])]),n("blockquote",[n("p",[t._v("常数在 Plan9 汇编用 "),n("code",[t._v("$num")]),t._v(" 表示，可以为负数，默认情况下为十进制。可以用 "),n("code",[t._v("$0x123")]),t._v(" 的形式来表示十六进制数。")])]),t._v(" "),n("p",[t._v("大部分都比较好理解，不过这里引入了新的标记 "),n("code",[t._v("<>")]),t._v("。"),n("code",[t._v("<>")]),t._v(" 跟在符号名之后，表示该全局变量只在当前文件生效，类似于 C 语言的 "),n("code",[t._v("static")]),t._v("。如果在另外文件中引用该变量的话，会报 "),n("code",[t._v("relocation target not found")]),t._v(" 错误。")]),t._v(" "),n("h2",{attrs:{id:"_5-手写汇编实现功能"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-手写汇编实现功能"}},[t._v("#")]),t._v(" 5. 手写汇编实现功能")]),t._v(" "),n("p",[t._v("在 Go 源码中会看到一些汇编写的代码，这些代码跟其他 go 代码一起组成了整个 go 的底层功能实现。下面通过一个简单的 Go 汇编代码示例来实现两数相加功能。")]),t._v(" "),n("h3",{attrs:{id:"_5-1-使用-go-汇编实现-add-函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-使用-go-汇编实现-add-函数"}},[t._v("#")]),t._v(" 5.1 使用 Go 汇编实现 "),n("code",[t._v("add")]),t._v(" 函数")]),t._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("div",{staticClass:"highlight-lines"},[n("br"),n("br"),n("br"),n("div",{staticClass:"highlighted"},[t._v(" ")]),n("br"),n("br"),n("br"),n("br"),n("br")]),n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// main.go")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br")])]),n("p",[t._v("Go 源码中 "),n("code",[t._v("add()")]),t._v(" 函数只有函数签名，没有具体的实现。使用 Go 汇编实现的 "),n("code",[t._v("add()")]),t._v(" 函数如下")]),t._v(" "),n("div",{staticClass:"language-s line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// add.s\nTEXT ·add(SB), $0-24  // add 栈空间为 0，入参+返回值大小=24字节\n  MOVQ a+0(FP), AX    // 从 main 取参数：2\n  ADDQ b+8(FP), AX    // 从 main 取参数：3\n\n  MOVQ AX, ret+16(FP) // 保存结果到返回值\n\n  RET\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br")])]),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"title"},[t._v("注意事项")]),n("p",[t._v("最后有一个必须的空行。")])]),n("p",[t._v("把源码与汇编代码一起编译并运行（当前场景下，这两个文件在同一个目录）")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("root@415bbc518ed6:/home/sammyne/hello-asm"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# go run -gcflags "-N -l" .')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("p",[t._v("可得结果为 "),n("code",[t._v("5")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"_5-2-反编译可执行程序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-反编译可执行程序"}},[t._v("#")]),t._v(" 5.2 反编译可执行程序")]),t._v(" "),n("p",[t._v("编译 "),n("a",{attrs:{href:"#_5-1-%E4%BD%BF%E7%94%A8-go-%E6%B1%87%E7%BC%96%E5%AE%9E%E7%8E%B0-add-%E5%87%BD%E6%95%B0"}},[t._v("5.1 节")]),t._v(" 的项目得到可执行程序 hello-asm，然后使用 objdump 工具进行反编译，获取汇编代码")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("root@415bbc518ed6:/home/sammyne/hello-asm"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# go build -o hello-asm -gcflags "-N -l" .')]),t._v("\nroot@415bbc518ed6:/home/sammyne/hello-asm"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# go tool objdump -s "main." hello-asm | grep -A8 "TEXT main.add"')]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("p",[t._v("得到 "),n("code",[t._v("add()")]),t._v(" 函数对应的汇编代码如下")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("TEXT main.add"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" /home/sammyne/hello-asm/add_amd64.s\n  add_amd64.s:3\t\t0x45ece0\t\t488b442408\t\tMOVQ 0x8"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", AX\t\n  add_amd64.s:4\t\t0x45ece5\t\t"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4803442410")]),t._v("\t\tADDQ 0x10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", AX\t\n  add_amd64.s:6\t\t0x45ecea\t\t"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4889442418")]),t._v("\t\tMOVQ AX, 0x18"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\n  add_amd64.s:8\t\t0x45ecef\t\tc3\t\t\tRET\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("p",[t._v("由上可知：")]),t._v(" "),n("ul",[n("li",[t._v("伪寄存器 FP 只有在编写 Go 汇编代码时使用。FP 伪寄存器指向 caller 传递给 callee 的第一个参数。")]),t._v(" "),n("li",[t._v("使用 "),n("code",[t._v("go tool compile")]),t._v("/"),n("code",[t._v("go tool objdump")]),t._v(" 得到的汇编看不到 FP 寄存器的踪影。")])]),t._v(" "),n("h2",{attrs:{id:"_6-go-调试工具"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-go-调试工具"}},[t._v("#")]),t._v(" 6. Go 调试工具")]),t._v(" "),n("p",[t._v("这里推荐 2 个 Go 代码调试工具。")]),t._v(" "),n("h3",{attrs:{id:"_6-1-gdb-调试-go-代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-gdb-调试-go-代码"}},[t._v("#")]),t._v(" 6.1 gdb 调试 Go 代码")]),t._v(" "),n("p",[t._v("测试代码")]),t._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Ier "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sub")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" data "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\ta"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sub")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" t Ier "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sub")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br")])]),n("p",[t._v("编译")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("root@415bbc518ed6:/home/sammyne/hello-gdb"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# go build -gcflags "-N -l" -o main')]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[t._v("使用 GDB 调试")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("root@415bbc518ed6:/home/sammyne/hello-gdb"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gdb main")]),t._v("\nGNU gdb "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Debian "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.2")]),t._v(".1-2+b3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.2")]),t._v(".1\nCopyright "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("C"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v(" Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" or later "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("http://gnu.org/licenses/gpl.html"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nThis is "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v(" software: you are "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v(" to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\nType "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"show copying"')]),t._v(" and "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"show warranty"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" details.\nThis GDB was configured as "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x86_64-linux-gnu"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\nType "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"show configuration"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" configuration details.\nFor bug reporting instructions, please see:\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("http://www.gnu.org/software/gdb/bugs/"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(".\nFind the GDB manual and other documentation resources online at:\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("http://www.gnu.org/software/gdb/documentation/"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(".\n\nFor help, "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"help"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\nType "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apropos word"')]),t._v(" to search "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" commands related to "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"word"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nReading symbols from main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".done.\nwarning: File "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/usr/local/go/src/runtime/runtime-gdb.py"')]),t._v(" auto-loading has been declined by your `auto-load safe-path"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' set to \""),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$debugdir")]),t._v(":"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$datadir")]),t._v('/auto-load".\nTo enable execution of this file add\n\tadd-auto-load-safe-path /usr/local/go/src/runtime/runtime-gdb.py\nline to your configuration file "/root/.gdbinit".\nTo completely disable this security protection add\n\tset auto-load safe-path /\nline to your configuration file "/root/.gdbinit".\nFor more information about this security protection see the\n"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:\n\tinfo "(gdb)Auto-loading safe path"\n(gdb) list\n6\t}\n7\t\n8\ttype data struct {\n9\t\ta, b int\n10\t}\n11\t\n12\tfunc (*data) add(a, b int) int {\n13\t\treturn a + b\n14\t}\n15\t\n(gdb) list\n16\tfunc (*data) sub(a, b int) int {\n17\t\treturn a - b\n18\t}\n19\t\n20\tfunc main() {\n21\t\tvar t Ier = &data{3, 4}\n22\t\n23\t\tprintln(t.add(1, 2))\n24\t\tprintln(t.sub(3, 2))\n25\t}\n(gdb) b 23 # 在源码 23 行处设置断点\nBreakpoint 1 at 0x45eddf: file /home/sammyne/hello-gdb/main.go, line 23.\n(gdb) r\nStarting program: /home/sammyne/hello-gdb/main \nwarning: Error disabling address space randomization: Operation not permitted\n[New LWP 1018]\n[New LWP 1019]\n[New LWP 1020]\n\nThread 1 "main" hit Breakpoint 1, main.main () at /home/sammyne/hello-gdb/main.go:23\n23\t\tprintln(t.add(1, 2))\n(gdb) info locals  # 显示变量\nt = {tab = 0x48b108 <data,main.Ier>, data = 0xc00002a738}\n(gdb) ptype t # 打印 t 的结构\ntype = struct runtime.iface {\n    runtime.itab *tab;\n    void *data;\n}\n(gdb) p *t.tab.inter  # 打印 t.tab.inter 指针指向的数据\n'),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" = {typ = {size = 16, ptrdata = 16, hash = 2491815843, tflag = 7 '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("', align = 8 '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("', fieldAlign = 8 '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("', kind = 20 '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("024', equal "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("void "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("void *, \n    void *, bool *"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" 0x469b80, gcdata "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 0x479f10 "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),n("span",{pre:!0,attrs:{class:"token entity",title:"\\002"}},[t._v("\\002")]),t._v('"')]),t._v(", str "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v(", ptrToThis "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18240")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", pkgpath "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("bytes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 0x45f27c "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", mhdr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("array "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 0x469be0, len "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(", \n    cap "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gdb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" disass  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示汇编")]),t._v("\nDump of assembler code "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" main.main:\n   0x000000000045ed80 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("+"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("0")]),t._v(">")]),t._v(":\tmov    %fs:0xfffffffffffffff8,%rcx\n   0x000000000045ed89 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("+"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(":\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cmp")]),t._v("    0x10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("%rcx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(",%rsp\n   0x000000000045ed8d "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("+1"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("3")]),t._v(">")]),t._v(":\tjbe    0x45eef2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("main.main+37"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("0")]),t._v(">")]),t._v("\n   0x000000000045ed93 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("+1"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("9")]),t._v(">")]),t._v(":\tsub    "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$0x70")]),t._v(",%rsp\n   0x000000000045ed97 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("+2"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("3")]),t._v(">")]),t._v(":\tmov    %rbp,0x68"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("%rsp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   0x000000000045ed9c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("+2"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("8")]),t._v(">")]),t._v(":\tlea    0x68"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("%rsp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(",%rbp\n   0x000000000045eda1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("+3"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("3")]),t._v(">")]),t._v(":\txorps  %xmm0,%xmm0\n   0x000000000045eda4 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("+3"),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("6")]),t._v(">")]),t._v(":\tmovups %xmm0,0x28"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("%rsp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br"),n("span",{staticClass:"line-number"},[t._v("50")]),n("br"),n("span",{staticClass:"line-number"},[t._v("51")]),n("br"),n("span",{staticClass:"line-number"},[t._v("52")]),n("br"),n("span",{staticClass:"line-number"},[t._v("53")]),n("br"),n("span",{staticClass:"line-number"},[t._v("54")]),n("br"),n("span",{staticClass:"line-number"},[t._v("55")]),n("br"),n("span",{staticClass:"line-number"},[t._v("56")]),n("br"),n("span",{staticClass:"line-number"},[t._v("57")]),n("br"),n("span",{staticClass:"line-number"},[t._v("58")]),n("br"),n("span",{staticClass:"line-number"},[t._v("59")]),n("br"),n("span",{staticClass:"line-number"},[t._v("60")]),n("br"),n("span",{staticClass:"line-number"},[t._v("61")]),n("br"),n("span",{staticClass:"line-number"},[t._v("62")]),n("br"),n("span",{staticClass:"line-number"},[t._v("63")]),n("br"),n("span",{staticClass:"line-number"},[t._v("64")]),n("br"),n("span",{staticClass:"line-number"},[t._v("65")]),n("br"),n("span",{staticClass:"line-number"},[t._v("66")]),n("br"),n("span",{staticClass:"line-number"},[t._v("67")]),n("br"),n("span",{staticClass:"line-number"},[t._v("68")]),n("br"),n("span",{staticClass:"line-number"},[t._v("69")]),n("br"),n("span",{staticClass:"line-number"},[t._v("70")]),n("br"),n("span",{staticClass:"line-number"},[t._v("71")]),n("br"),n("span",{staticClass:"line-number"},[t._v("72")]),n("br"),n("span",{staticClass:"line-number"},[t._v("73")]),n("br"),n("span",{staticClass:"line-number"},[t._v("74")]),n("br"),n("span",{staticClass:"line-number"},[t._v("75")]),n("br"),n("span",{staticClass:"line-number"},[t._v("76")]),n("br"),n("span",{staticClass:"line-number"},[t._v("77")]),n("br"),n("span",{staticClass:"line-number"},[t._v("78")]),n("br"),n("span",{staticClass:"line-number"},[t._v("79")]),n("br"),n("span",{staticClass:"line-number"},[t._v("80")]),n("br"),n("span",{staticClass:"line-number"},[t._v("81")]),n("br"),n("span",{staticClass:"line-number"},[t._v("82")]),n("br")])]),n("p",[t._v("常用的 gdb 调试命令有")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("run")])]),t._v(" "),n("li",[n("code",[t._v("continue")])]),t._v(" "),n("li",[n("code",[t._v("break")])]),t._v(" "),n("li",[n("code",[t._v("backtrace")]),t._v(" 和 "),n("code",[t._v("frame")])]),t._v(" "),n("li",[n("code",[t._v("info break")]),t._v("、"),n("code",[t._v("info locals")])]),t._v(" "),n("li",[n("code",[t._v("list")])]),t._v(" "),n("li",[n("code",[t._v("print")]),t._v(" 和 "),n("code",[t._v("ptype")])]),t._v(" "),n("li",[n("code",[t._v("disass")])])]),t._v(" "),n("h3",{attrs:{id:"_6-2-delve-调试代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-delve-调试代码"}},[t._v("#")]),t._v(" 6.2 delve 调试代码")]),t._v(" "),n("p",[t._v("CLI 版和 GUI 版的项目地址分别为 "),n("a",{attrs:{href:"https://github.com/go-delve/delve",target:"_blank",rel:"noopener noreferrer"}},[t._v("go-delve"),n("OutboundLink")],1),t._v(" 和 "),n("a",{attrs:{href:"https://github.com/aarzilli/gdlv",target:"_blank",rel:"noopener noreferrer"}},[t._v("gdlv"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("p",[t._v("dlv 的安装使用，这里不再做过多讲解，感兴趣的可以尝试一下。")]),t._v(" "),n("ul",[n("li",[t._v("gdb 作为调试工具自是不用多说，比较老牌、强大，可以支持多种语言。")]),t._v(" "),n("li",[t._v("delve 则是使用 go 语言开发的，用来调试 go 的工具，功能也是十分强大，打印结果可以显示 gdb 支持不了的东西，这里不再做过多讲解，有兴趣的可以查阅相关资料。")])]),t._v(" "),n("h2",{attrs:{id:"_7-总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-总结"}},[t._v("#")]),t._v(" 7. 总结")]),t._v(" "),n("p",[t._v("对于 Go 汇编基础大致需要熟悉下面几个方面：")]),t._v(" "),n("ul",[n("li",[t._v("进程内存布局：运行时栈、运行时堆、数据区、代码区")]),t._v(" "),n("li",[t._v("核心寄存器：PC、FP、SB、SP、BP ...")]),t._v(" "),n("li",[t._v("汇编操作指令："),n("code",[t._v("SUBQ")]),t._v("、"),n("code",[t._v("MOVQ")]),t._v("、"),n("code",[t._v("ADDQ")]),t._v("、"),n("code",[t._v("CALL")]),t._v("...")]),t._v(" "),n("li",[t._v("汇编语法：函数、变量 ...")])]),t._v(" "),n("p",[t._v("希望以上例子能够帮助你了解 Go 的汇编。当然，对于大部分业务开发人员来说，只要看的懂即可。如果想进一步的了解，可以阅读相关的资料或者书籍。")]),t._v(" "),n("h2",{attrs:{id:"参考文献"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),n("ol",[n("li",[n("a",{attrs:{href:"https://github.com/cch123/golang-notes/blob/master/assembly.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Plan9 assembly"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://segmentfault.com/a/1190000019753885",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go 函数调用 -- 栈和寄存器视角"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://www.davidwong.fr/goasm/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go Assembly by Example"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://juejin.im/post/6844904005630443533#heading-3",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go程序的调用规约"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/go-internals-cn/go-internals/blob/master/chapter1_assembly_primer/README.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("第一章: Go 汇编入门"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://lrita.github.io/2017/12/12/golang-asm/",target:"_blank",rel:"noopener noreferrer"}},[t._v("golang 汇编"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://chai2010.cn/advanced-go-programming-book/ch3-asm/ch3-01-basic.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go 汇编语言--3.1 快速入门"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);