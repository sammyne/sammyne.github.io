(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{728:function(s,t,a){"use strict";a.r(t);var n=a(6),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("blockquote",[a("p",[s._v("原文：https://dave.cheney.net/2019/07/09/clear-is-better-than-clever")])]),s._v(" "),a("blockquote",[a("p",[s._v("本文衍生于我在 GopherCon Singapore 2019 上的演讲。演讲引用了我关于 "),a("a",{attrs:{href:"https://dave.cheney.net/2014/05/24/on-declaring-variables",target:"_blank",rel:"noopener noreferrer"}},[s._v("声明变量"),a("OutboundLink")],1),s._v(" 的博文和 "),a("a",{attrs:{href:"https://dave.cheney.net/2016/08/20/solid-go-design",target:"_blank",rel:"noopener noreferrer"}},[s._v("GolangUK 2017 presentation on SOLID design"),a("OutboundLink")],1),s._v(" 的演讲。简洁起见，本文略掉演讲的那些部分，有需要的话，请回看 "),a("a",{attrs:{href:"https://www.youtube.com/watch?v=NwEuRO_w8HE",target:"_blank",rel:"noopener noreferrer"}},[s._v("演讲的录像"),a("OutboundLink")],1),s._v("。")])]),s._v(" "),a("p",[s._v("可读性被称为 Go 的核心教义之一的说法是我不敢苟同的。本文将会讨论明确性和可读性的区别，说明我所指的明确性和如何应用于 Go 代码，并安利 Go 程序在编程时追求可读性之余不忘明确性。")]),s._v(" "),a("h2",{attrs:{id:"为啥我要读你的代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为啥我要读你的代码"}},[s._v("#")]),s._v(" 为啥我要读你的代码")]),s._v(" "),a("p",[s._v("辨别明确性和可读性之前，可能需要回答的问题是“为啥我要读您的代码？”更确切地说，我这里说的 "),a("em",[s._v("我")]),s._v(" 是指你而不是我自己。当提及 "),a("em",[s._v("您的代码")]),s._v(" 时，我是以第三方的视角说你。所以，真正的问题是“为什么你要读其他人的代码？”")]),s._v(" "),a("p",[s._v("我认为 Russ Cox 转述 Titus Winters 的话是最能回答这个问题的：")]),s._v(" "),a("blockquote",[a("p",[s._v("软件工程是耗费时间和协同其他程序猿的编程活动。"),a("br"),s._v("\n-- Russ Cox，GopherCon Singapore 2018")])]),s._v(" "),a("p",[s._v("“我为啥要读你的代码”是因为我们一条绳子上协作的蚂蚱。无关我们办公地点、所在城市、就职公司，我们合作开发一份代码，或者更加常见的是引用其作为依赖。")]),s._v(" "),a("p",[s._v("Russ 和 Titus 所观察到的关键点就是这个：软件工程是软件工程师们的长期协作。我得读你的代码，你读我的代码。如此一来，我才能理解你的代码，而你才可以维护我的代码。简而言之，随便抓个人都能改变这些代码。")]),s._v(" "),a("p",[s._v("Russ 是明确区分软件编程和软件工程的区别的。前者是你写给自己的程序，而后者是多人长期不懈贡献的一个程序、项目、服务或产品。工程师会有所变动，团队会变大或缩小，需求会变更，特性会不断添加，bug 得到修复。这是软件工程的本质。")]),s._v(" "),a("h2",{attrs:{id:"我们不是读代码-而是在解码它"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我们不是读代码-而是在解码它"}},[s._v("#")]),s._v(" 我们不是读代码，而是在解码它")]),s._v(" "),a("blockquote",[a("p",[s._v("我是在演讲后某个时间点才清晰地意识到：代码不是文学作品。我们不是在读它，而是在解码它。"),a("br"),s._v("\n-- "),a("a",{attrs:{href:"http://www.gigamonkeys.com/code-reading/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Peter Seibel"),a("OutboundLink")],1)])]),s._v(" "),a("p",[s._v("Peter Seibel 认为程序不是用来读的，而是用来解码的。事后回看显而易见，毕竟我们都叫它源代码而不是源文学。程序的源代码是一种中间形式，介于我们脑海萦绕的概念和计算机可执行的符号之间。")]),s._v(" "),a("p",[s._v("多年经验告诉我，面对一个第三方代码库时最常见的抱怨是代码读不懂。你也应该有所体会吧？")]),s._v(" "),a("p",[s._v("但是可读性是一个主观的概念而已。可读性让我们对单行字符数和变量吹毛求疵，为括号的位置唇枪舌战，不惜为关于空格的编码风格和代码审查规则拳脚相向。")]),s._v(" "),a("h2",{attrs:{id:"明确性不等于可读性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#明确性不等于可读性"}},[s._v("#")]),s._v(" 明确性不等于可读性")]),s._v(" "),a("p",[s._v("明确性则是被关注代码的属性之一。清晰的代码不依赖与函数名或缩进等深层次的细节，因为它只描述代码要做什么，而不是怎么做的。")]),s._v(" "),a("p",[s._v("你或我说某个第三方代码库不可读时，我觉得我们真正的意思是 "),a("em",[s._v("我都不懂呐")]),s._v("。因为我们的目的不是代码读得快而是理解得快，所以本文后续部分将会试着探究明确的代码和只是可读的代码之间的区别。")]),s._v(" "),a("h2",{attrs:{id:"把代码都保持在左手边"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#把代码都保持在左手边"}},[s._v("#")]),s._v(" 把代码都保持在左手边")]),s._v(" "),a("p",[s._v("Go 程序风格往往都偏向于防卫判断和前提条件语句。这促使成功执行的流程逐步平坦地流转，而不是在条件子块中拼命缩进。因为函数的主体部分不会右移超出屏幕视野，Mat Ryer 称之为 "),a("a",{attrs:{href:"https://medium.com/@matryer/line-of-sight-in-code-186dd7cdea88",target:"_blank",rel:"noopener noreferrer"}},[s._v("line of sight coding"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("p",[s._v("保持条件代码块的短小，且避免对异常情况采用嵌套代码块或可能会很复杂的值遮盖方式。成功流程顺着页面向下执行。在一系列语句的任意一条，一旦执行到了就可肯定不断增加的前提条件是满足的。")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ReadConfig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("path "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("Config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" err\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("defer")]),s._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("权威案例是经典的 Go 常用模式："),a("code",[s._v("if err != nil")]),s._v(" 然后返回调用源头，否则继续往下执行。稍作泛化可得如下模式的伪代码")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" some condition "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true: cleanup")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false: continue")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("如果"),a("code",[s._v("some condition")]),s._v("为真，返回给调用者，否则继续执行直至函数末尾。")]),s._v(" "),a("p",[s._v("这种形式适用于所有前提判断、错误检查、字典查询和长度检查等情形。前提检查形式也许会变，但是模式永不变：后续清理代码嵌套在代码块里，以"),a("code",[s._v("return")]),s._v("结束，而成功情况对应的逻辑则在代码块之外且仅当前提条件满足时可达。")]),s._v(" "),a("p",[s._v("即使你不确定前提和成功分别对应的代码功能、前提条件是如何设定的、后处理逻辑是怎样工作的，你也知道这是一个防卫判断条款。")]),s._v(" "),a("h2",{attrs:{id:"结构化编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结构化编程"}},[s._v("#")]),s._v(" 结构化编程")]),s._v(" "),a("p",[s._v("以下"),a("code",[s._v("comp")]),s._v("函数接收两个"),a("code",[s._v("int")]),s._v("并返回一个"),a("code",[s._v("int")])]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("comp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[a("code",[s._v("comp")]),s._v("函数的写法类似前面提到的防卫条款模式。如果"),a("code",[s._v("a")]),s._v("小于"),a("code",[s._v("b")]),s._v("，"),a("code",[s._v("return -1")]),s._v("分支执行。如果"),a("code",[s._v("a")]),s._v("大于"),a("code",[s._v("b")]),s._v("，"),a("code",[s._v("return 1")]),s._v("分支执行。否则"),a("code",[s._v("a")]),s._v("和"),a("code",[s._v("b")]),s._v("相等，最后的"),a("code",[s._v("return 0")]),s._v("分支执行。")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("comp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" condition A "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        body A\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" condition B "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        body B\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("不同于防卫条款模式，"),a("code",[s._v("comp")]),s._v("如其字面所示，负责维护的同学必须把代码都读了。为了弄清楚什么时候返回 0，读者必须遍历所有条件分支。对于一页幻灯片就能容下的函数问题不大，但是现实世界中为我们获利、需以专业知识维护的复杂函数很少会是这种规模的，且它们条件分支也没那么简单。")]),s._v(" "),a("p",[s._v("让我们处理调整一下，使得返回 0 的情况更加明确：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("comp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("尽管部分人觉得上述代码可读性不高--Go 相当反对一长串"),a("code",[s._v("if else if")]),s._v("语句，但现在读者清楚地知道：当且仅当其他条件都不满足时才会返回 0.")]),s._v(" "),a("p",[s._v("何以见得？Go 标准文档声明有每个返回值的函数必须以一条返回值的终止语句结束。也就是说，所有条件分支的主体必须返回一个值。所以，下面代码是无法通过编译的：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("comp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// does not compile")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("再者，读者这份代码其实想要表达式不是一系列条件判断，而是一个条件选择的例子：只有一条分支会被执行。基于不同输入，返回值总会是-1、0 或 1 中的某一个。")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("comp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("但是每个条件的写法都不一样，所以读起来有点困难，首先是个简单的"),a("code",[s._v("if a < b")]),s._v("，然后是不常见的"),a("code",[s._v("else if a > b")]),s._v("，最后其实是没有明确条件的。")]),s._v(" "),a("p",[s._v("好在有一个可用于清楚表达意图的语句："),a("code",[s._v("switch")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("comp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("现在读者应该能够明确知道这是个选择了。每个选择分支都在对应"),a("code",[s._v("case")]),s._v("内描述，没有了多变的"),a("code",[s._v("else")]),s._v("或"),a("code",[s._v("else if")]),s._v("子句。")]),s._v(" "),a("p",[s._v("将默认条件分支移到"),a("code",[s._v("switch")]),s._v("内，读者只需考虑符合他们要求的情形，因为"),a("code",[s._v("default")]),s._v("分支的存在保证没有 case 能够跳出"),a("code",[s._v("switch")]),s._v("块（"),a("code",[s._v("fallthrough")]),s._v(" 关键是会使得分析复杂化，因此 "),a("code",[s._v("fallthrough")]),s._v(" 并不建议在 "),a("code",[s._v("switch")]),s._v(" 语句中使用）。")]),s._v(" "),a("blockquote",[a("p",[s._v("结构化编程隐藏结构而强调行为。"),a("br"),s._v("\n-- Richard Bircher, "),a("a",{attrs:{href:"https://www.amazon.com/Limits-Software-People-Projects-Perspectives/dp/0201433230",target:"_blank",rel:"noopener noreferrer"}},[s._v("The limits of software"),a("OutboundLink")],1)])]),s._v(" "),a("p",[s._v("这是我最近看到一个比较贴切的语录。个人推崇明确性是有事实支撑的，旨在强调代码的行为，而不是结构本身的细枝末节。换种说法就是：关注代码想要实现的功能而不是 "),a("em",[s._v("它实现这个功能的方式")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"指导方针"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指导方针"}},[s._v("#")]),s._v(" 指导方针")]),s._v(" "),a("p",[s._v("我开篇讨论可读性和明确性，并暗示还有优秀的 Go 代码遵循的其他原则。以其他原则来结束本篇讨论看起来是合适的样子。")]),s._v(" "),a("p",[s._v("上一年 Bryan Cantrill 作了一个关于操作系统原则的精彩演讲，其中强调不同操作系统注重不同原则。这些操作系统的区别不是所忽略的原则，也不是内部的芯片，而是各自专注的核心原则集合。那么 Go 的核心原则集合又是啥呢？")]),s._v(" "),a("h3",{attrs:{id:"明确"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#明确"}},[s._v("#")]),s._v(" 明确")]),s._v(" "),a("p",[s._v("如果你觉得是可读性，我给你提供了另一种说法。")]),s._v(" "),a("blockquote",[a("p",[s._v("程序必须为让人能看懂而写，且让机器能够执行即可。"),a("br"),s._v("\n-- Hal Abelson and Gerald Sussman. Structure and Interpretation of Computer Programs")])]),s._v(" "),a("p",[s._v("代码被阅读的次数远多于编写的次数。一段代码在其生命周期内的阅读次数会不下百次甚至千次。反复的阅读是为了理解这段代码。因为不只是 Go 程序，所有软件都是人写的且被其他人阅读，所以明确性是重要的。而软件会被机器编译执行则是次要的。")]),s._v(" "),a("blockquote",[a("p",[s._v("程序猿最重要的技巧是能够有效地交互思想。"),a("br"),s._v("\n-- Gastón Jorquera")])]),s._v(" "),a("p",[s._v("法律文献有两个空格缩进是为了引起读者注意，但对帮助外行人理解其内容没有任何用处。可读性是用于描述从屏幕上读字的容易程度的属性。而另一方面，明确性想要回答“你懂刚才读的材料了么”的问题。")]),s._v(" "),a("p",[s._v("程序写给自己的可能只会跑一次，或者只会被我们自己看到，它会为我们自己处理一些事。但是对于多人共同开发的、或被长期使用且需求、特性和环境等会变化的软件，我们就必须着眼于确保程序是可维护的。")]),s._v(" "),a("p",[s._v("编写可维护代码的第一步就是明确表达代码的意图。")]),s._v(" "),a("h2",{attrs:{id:"简洁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简洁"}},[s._v("#")]),s._v(" 简洁")]),s._v(" "),a("p",[s._v("下一个原则明显就是简洁了。某些人可能会觉得任何编程语言最重要的原则就是到此为止= =")]),s._v(" "),a("p",[s._v("为什么我们应该追求简洁？为什么 Go 程序应该简洁？")]),s._v(" "),a("blockquote",[a("p",[s._v("能够简化的能力是指消除不必要代码而使得必要部分凸显出来。"),a("br"),s._v("\n-- Hans Hofmann")])]),s._v(" "),a("p",[s._v("我们都遇到过哀嚎“我看不懂这份代码”的情形。参与某个项目，实施变更时瑟瑟发抖生怕它会搞崩程序的其他部分--那些你不懂也不知道如何修复的部分。")]),s._v(" "),a("p",[s._v("这就是复杂性。复杂性把软件从可靠变成不可靠。复杂性导致不可维护的软件。复杂性毁坏软件项目。明确和简洁才是催生可维护软件的两大交错的动力。")]),s._v(" "),a("h2",{attrs:{id:"生产力"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生产力"}},[s._v("#")]),s._v(" 生产力")]),s._v(" "),a("p",[s._v("我想强调的最后一项 Go 原则是生产力。开发者的生产力归结为：你进行有效工作的时间对比等待工具帮忙或无助地徘徊于第三方代码的时间。Go 程序猿应该有 Go 可以帮他做很多工作的感觉。")]),s._v(" "),a("blockquote",[a("p",[s._v("我开始抱怨，椅子转过去面对 Robert，讨论一些关键问题。编译结束之前，我们把 Ken 也拉上了，觉得做点啥。"),a("br"),s._v("\n-- Rob Pike, "),a("a",{attrs:{href:"https://commandcenter.blogspot.com/2012/06/less-is-exponentially-more.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Less is Exponentially more"),a("OutboundLink")],1)])]),s._v(" "),a("p",[s._v("这个笑话是说 Go 是在等待 C++ 程序编译时设计的。快速的编译是 Go 的关键特性，也是吸引新开发者的主要驱动力。虽然速度是永恒的战场，但是我们可以大胆说其他语言需要花费分钟级别的编译在 Go 这里只需秒级。这让 Go 程序猿觉得获得了同类动态语言的高效性而没有引入那些语言固有的问题。")]),s._v(" "),a("blockquote",[a("p",[s._v("设计是门编写今天能跑而且拥抱变化的代码的艺术。"),a("br"),s._v("\n-- Sandi Metz")])]),s._v(" "),a("p",[s._v("开发效率更深层次的是，Go 程序猿意识到代码写出来是要读的，所以相比于写代码，更加注重于读代码的艺术。Go 做得如此严格：通过工具或传统习惯强制按特定风格格式化代码。这样做消除了学习项目专用风格的阻力，且有助于发现看起来就不对的错误。")]),s._v(" "),a("p",[s._v("Go 程序猿无须花费大量时间调试高深莫测的编译错误，也不会浪费好几天处理负责的构建脚本或者把代码部署到生产环境。最重要的是：他们不需要把时间浪费在理解同事写的代码上面。")]),s._v(" "),a("blockquote",[a("p",[s._v("复杂性囊括任何使得软件难以理解或修改的东西。"),a("br"),s._v("\n-- John Ousterhout, "),a("a",{attrs:{href:"https://www.amazon.com/Philosophy-Software-Design-John-Ousterhout/dp/1732102201/ref=sr_1_3?ie=UTF8&qid=1524677319&sr=8-3&keywords=john+ousterhout",target:"_blank",rel:"noopener noreferrer"}},[s._v("A Philosophy of Software Design"),a("OutboundLink")],1)])]),s._v(" "),a("p",[s._v("对于每个正在读这篇博文的人，就我所知，你们最终都会离开现在的雇主。可能是换个职位，也可能是升职，或者换城市，或者追随小伙伴海外发展。无论理由是啥，我们必须考虑所创造程序的可维护性的连贯转移。")]),s._v(" "),a("p",[s._v("如果我们都追求明确、简洁的程序，关注同事的生产力，所有 Go 程序猿都会感觉好很多。")]),s._v(" "),a("p",[s._v("如果我们没有这样做，工作一换，之前的程序撒手不管就会得不到维护，无法更新，难以招募新成员，让负责它的其他人感觉非常难受。")]),s._v(" "),a("p",[s._v("如果软件得不到维护，他就得重写；这也会减弱你公司对 Go 青睐度。")]),s._v(" "),a("h2",{attrs:{id:"相关博文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关博文"}},[s._v("#")]),s._v(" 相关博文")]),s._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://dave.cheney.net/2014/05/19/accidental-method-value",target:"_blank",rel:"noopener noreferrer"}},[s._v("Accidental method value"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://dave.cheney.net/2016/02/06/unhelpful-abstractions",target:"_blank",rel:"noopener noreferrer"}},[s._v("Unhelpful abstractions"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://dave.cheney.net/2013/01/19/what-is-the-zero-value-and-why-is-it-useful",target:"_blank",rel:"noopener noreferrer"}},[s._v("What is the zero value, and why is it useful?"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://dave.cheney.net/2015/11/05/lets-talk-about-logging",target:"_blank",rel:"noopener noreferrer"}},[s._v("Let's talk about logging"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);