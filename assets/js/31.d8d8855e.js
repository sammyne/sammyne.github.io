(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{513:function(t,s,a){t.exports=a.p+"assets/img/qemu-catch-double-fault.18798a4d.png"},514:function(t,s,a){t.exports=a.p+"assets/img/qemu-double-fault-on-stack-overflow.ca26d0b0.png"},713:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("blockquote",[n("p",[t._v("原文："),n("a",{attrs:{href:"https://os.phil-opp.com/double-fault-exceptions/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Double Faults"),n("OutboundLink")],1)])]),t._v(" "),n("p",[t._v("本文深入探究 CPU 调用异常处理函数失败时触发的二级异常。处理这种异常能够规避不可恢复的导致系统重置的 "),n("em",[t._v("三级异常")]),t._v("。为了避免所有情况下的三级异常，我们配置一个 "),n("em",[t._v("中断栈表")]),t._v(" 用于在独立的内核栈上捕获二级异常。")]),t._v(" "),n("p",[t._v("此博客在 "),n("a",{attrs:{href:"https://github.com/phil-opp/blog_os",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub"),n("OutboundLink")],1),t._v(" 上公开开发。如果您有任何问题或疑问，请在此处打开一个问题。 您也可以在 "),n("a",{attrs:{href:"#valine"}},[t._v("底部")]),t._v(" 发表评论。这篇文章的完整源代码可以在 "),n("a",{attrs:{href:"https://github.com/sammyne/blog-os-cn/tree/master/06-double-faults",target:"_blank",rel:"noopener noreferrer"}},[t._v("blog-os-cn/06-double-faults"),n("OutboundLink")],1),t._v(" 找到。")]),t._v(" "),n("h2",{attrs:{id:"什么是二级异常"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是二级异常"}},[t._v("#")]),t._v(" 什么是二级异常")]),t._v(" "),n("p",[t._v("简而言之，二级异常是一种特殊的异常，在 CPU 调用异常处理函数失败时触发。例如，缺页异常出现后，"),n("RouterLink",{attrs:{to:"/2020/07/27/blog-os-05-cpu-exceptions/#中断描述符表"}},[t._v("中断描述符表")]),t._v(" 没有注册的缺页异常处理函数。所以，这和编程语言的所有异常捕获块类似，例如 C++ 的 "),n("code",[t._v("catch(...)")]),t._v(" 或 Java/C# 的 "),n("code",[t._v("catch(Exception e)")]),t._v("。")],1),t._v(" "),n("p",[t._v("二级异常和常规异常表现类似。它的向量值为 "),n("code",[t._v("8")]),t._v("，我们可以在 IDT 为其定义常规异常处理函数。因为没有处理的二级异常会触发不可恢复的 "),n("em",[t._v("三级异常")]),t._v("，所以设置二级异常处理函数是非常重要的。三级异常无法被捕获，大多数硬件的响应方式都是系统重置。")]),t._v(" "),n("h3",{attrs:{id:"触发二级异常"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#触发二级异常"}},[t._v("#")]),t._v(" 触发二级异常")]),t._v(" "),n("p",[t._v("让我们试着通过触发没有定义处理函数的异常来引发一个二级异常：")]),t._v(" "),n("div",{staticClass:"language-rust line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in src/main.rs")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[no_mangle]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("_start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("println!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World{}"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("blog_os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// trigger a page fault")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsafe")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xdeadbeef")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("u64")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// as before")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[cfg(test)]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test_main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("println!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"It did not crash!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("loop")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br")])]),n("p",[t._v("我们使用 "),n("code",[t._v("unsafe")]),t._v(" 在非法地址 "),n("code",[t._v("0xdeadbeef")]),t._v(" 执行写入操作。虚拟地址没有映射到页表的物理地址，所以缺页异常触发。我们没有在 "),n("RouterLink",{attrs:{to:"/2020/07/27/blog-os-05-cpu-exceptions/#中断描述符表"}},[t._v("IDT")]),t._v(" 注册缺页异常处理函数，所以二级异常触发。")],1),t._v(" "),n("p",[t._v("现在启动内核会发现内核会不断重启。不断重启的原因如下：")]),t._v(" "),n("ol",[n("li",[t._v("CPU 试图往地址 "),n("code",[t._v("0xdeadbeef")]),t._v(" 写入值，触发缺页异常")]),t._v(" "),n("li",[t._v("CPU 查看 IDT 的相应表项，发现没有相应的处理函数。因此，无法调用缺页异常处理函数，二级异常触发")]),t._v(" "),n("li",[t._v("CPU 查看 IDT 表项中的二级异常处理函数，但是这个表项也没有注明处理函数。因此，"),n("em",[t._v("三级")]),t._v(" 异常触发")]),t._v(" "),n("li",[t._v("三级异常是不可恢复的。QEMU 像大多数硬件那样响应，触发系统重置")])]),t._v(" "),n("p",[t._v("所以，为了防止触发三级异常，我们要么为缺页异常提供处理函数，要么为二级异常提供处理函数。我们想要避免所有情况下的三级异常，所以让我们创建一个二级异常处理函数，用于处理所有未处理异常。")]),t._v(" "),n("h2",{attrs:{id:"二级异常处理函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二级异常处理函数"}},[t._v("#")]),t._v(" 二级异常处理函数")]),t._v(" "),n("p",[t._v("二级异常是一个附带错误码的常规异常，所以我们可以注册一个类似断点处理函数的处理函数：")]),t._v(" "),n("div",{staticClass:"language-rust line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in src/interrupts.rs")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("lazy_static!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ref")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IDT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptDescriptorTable")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" idt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptDescriptorTable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        idt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("breakpoint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_handler_fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("breakpoint_handler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        idt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("double_fault"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_handler_fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("double_fault_handler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// new")]),t._v("\n        idt\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// new")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x86-interrupt"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("double_fault_handler")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    stack_frame"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptStackFrame")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _error_code"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("u64")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("panic!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"EXCEPTION: DOUBLE FAULT\\n{:#?}"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stack_frame"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br")])]),n("p",[t._v("处理函数打印一条简单的错误信息，显示异常的栈帧。二级异常的错误码总是 0，所以没有必要打印它。和断点处理函数不同的是二级异常处理函数 "),n("a",{attrs:{href:"https://doc.rust-lang.org/stable/rust-by-example/fn/diverging.html",target:"_blank",rel:"noopener noreferrer"}},[n("em",[t._v("发散的")]),n("OutboundLink")],1),t._v("。原因是 "),n("code",[t._v("x86_64")]),t._v(" 架构不允许从二级异常处理函数返回。")]),t._v(" "),n("p",[t._v("现在启动内核应该能够看到二级异常处理函数被调用了：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(513),alt:"QEMU 显示  和异常栈帧"}})]),t._v(" "),n("p",[t._v("跑通了！这次发生的事情如下：")]),t._v(" "),n("ol",[n("li",[t._v("CPU 试图往地址 "),n("code",[t._v("0xdeadbeef")]),t._v(" 写入值，触发缺页异常")]),t._v(" "),n("li",[t._v("CPU 查看 IDT 的相应表项，发现没有相应的处理函数。因此，无法调用缺页异常处理函数，二级异常触发")]),t._v(" "),n("li",[t._v("CPU 跳转到现在存在的二级异常处理函数")])]),t._v(" "),n("p",[t._v("由于 CPU 现在调用二级异常处理函数，三级异常（和不断重启）不再触发。")]),t._v(" "),n("p",[t._v("看起来不难呀！那为啥我们还需要为这个主题一大篇文章呢？虽然我们现在可以捕获 "),n("em",[t._v("大部分")]),t._v(" 二级异常，但是还有些情况是我们目前的方法没有覆盖到的。")]),t._v(" "),n("h2",{attrs:{id:"二级异常的原因"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二级异常的原因"}},[t._v("#")]),t._v(" 二级异常的原因")]),t._v(" "),n("p",[t._v("查看特殊情况前，我们需要知道二级异常发生的确切原因。之前，我们的定义比较宽泛：")]),t._v(" "),n("blockquote",[n("p",[t._v("二级异常是一种特殊的异常，在 CPU 调用异常处理函数失败时触发。")])]),t._v(" "),n("p",[n("em",[t._v("“调用失败”")]),t._v(" 是什么意思？处理函数不存在？处理函数被 "),n("a",{attrs:{href:"http://pages.cs.wisc.edu/~remzi/OSTEP/vm-beyondphys.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("换出"),n("OutboundLink")],1),t._v(" 了 CPU？处理函数自身出发了异常又会怎样？")]),t._v(" "),n("p",[t._v("例如，以下情况出现时会发生什么事：")]),t._v(" "),n("ol",[n("li",[t._v("断点异常触发，但是对应的处理函数被换出了 CPU？")]),t._v(" "),n("li",[t._v("缺页异常触发，但是缺页异常处理函数被换出了 CPU？")]),t._v(" "),n("li",[t._v("除零异常导致断点异常，但是断点处理函数被换出了 CPU？")]),t._v(" "),n("li",[t._v("内核栈溢出，触及了 "),n("em",[t._v("防护页")]),t._v("？")])]),t._v(" "),n("p",[t._v("好在 AMD64 指南（"),n("a",{attrs:{href:"https://www.amd.com/system/files/TechDocs/24593.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("PDF"),n("OutboundLink")],1),t._v("）有一个确切的定义（在 8.2.9 节）。根据指南，“处理之前（第一个）异常过程中触发了第二个异常可以触发二级异常”。这个 "),n("em",[t._v("“可以”")]),t._v(" 很重要：只有非常特定的一场组合才能导致二级异常。具体组合如下：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("第一个异常")]),t._v(" "),n("th",[t._v("第二个异常")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("a",{attrs:{href:"https://wiki.osdev.org/Exceptions#Divide-by-zero_Error",target:"_blank",rel:"noopener noreferrer"}},[t._v("Divide-by-zero"),n("OutboundLink")],1),t._v(","),n("br"),n("a",{attrs:{href:"https://wiki.osdev.org/Exceptions#Invalid_TSS",target:"_blank",rel:"noopener noreferrer"}},[t._v("Invalid TSS"),n("OutboundLink")],1),t._v(","),n("br"),n("a",{attrs:{href:"https://wiki.osdev.org/Exceptions#Segment_Not_Present",target:"_blank",rel:"noopener noreferrer"}},[t._v("Segment Not Present"),n("OutboundLink")],1),t._v(","),n("br"),n("a",{attrs:{href:"https://wiki.osdev.org/Exceptions#Stack-Segment_Fault",target:"_blank",rel:"noopener noreferrer"}},[t._v("Stack-Segment Fault"),n("OutboundLink")],1),t._v(","),n("br"),n("a",{attrs:{href:"https://wiki.osdev.org/Exceptions#General_Protection_Fault",target:"_blank",rel:"noopener noreferrer"}},[t._v("General Protection Fault"),n("OutboundLink")],1)]),t._v(" "),n("td",[n("a",{attrs:{href:"https://wiki.osdev.org/Exceptions#Invalid_TSS",target:"_blank",rel:"noopener noreferrer"}},[t._v("Invalid TSS"),n("OutboundLink")],1),t._v(","),n("br"),n("a",{attrs:{href:"https://wiki.osdev.org/Exceptions#Segment_Not_Present",target:"_blank",rel:"noopener noreferrer"}},[t._v("Segment Not Present"),n("OutboundLink")],1),t._v(","),n("br"),n("a",{attrs:{href:"https://wiki.osdev.org/Exceptions#Stack-Segment_Fault",target:"_blank",rel:"noopener noreferrer"}},[t._v("Stack-Segment Fault"),n("OutboundLink")],1),t._v(","),n("br"),n("a",{attrs:{href:"https://wiki.osdev.org/Exceptions#General_Protection_Fault",target:"_blank",rel:"noopener noreferrer"}},[t._v("General Protection Fault"),n("OutboundLink")],1)])]),t._v(" "),n("tr",[n("td",[n("a",{attrs:{href:"https://wiki.osdev.org/Exceptions#Page_Fault",target:"_blank",rel:"noopener noreferrer"}},[t._v("Page Fault"),n("OutboundLink")],1)]),t._v(" "),n("td",[n("a",{attrs:{href:"https://wiki.osdev.org/Exceptions#Page_Fault",target:"_blank",rel:"noopener noreferrer"}},[t._v("Page Fault"),n("OutboundLink")],1),t._v(","),n("br"),n("a",{attrs:{href:"https://wiki.osdev.org/Exceptions#Invalid_TSS",target:"_blank",rel:"noopener noreferrer"}},[t._v("Invalid TSS"),n("OutboundLink")],1),t._v(","),n("br"),n("a",{attrs:{href:"https://wiki.osdev.org/Exceptions#Segment_Not_Present",target:"_blank",rel:"noopener noreferrer"}},[t._v("Segment Not Present"),n("OutboundLink")],1),t._v(","),n("br"),n("a",{attrs:{href:"https://wiki.osdev.org/Exceptions#Stack-Segment_Fault",target:"_blank",rel:"noopener noreferrer"}},[t._v("Stack-Segment Fault"),n("OutboundLink")],1),t._v(","),n("br"),n("a",{attrs:{href:"https://wiki.osdev.org/Exceptions#General_Protection_Fault",target:"_blank",rel:"noopener noreferrer"}},[t._v("General Protection Fault"),n("OutboundLink")],1)])])])]),t._v(" "),n("p",[t._v("所以，除零异常紧跟缺页异常没事（缺页异常处理函数会被调用），但是除零异常紧跟通用保护异常则会导致二级异常。")]),t._v(" "),n("p",[t._v("借助这个表格，我们可以回答上述问题中的前三个：")]),t._v(" "),n("ol",[n("li",[t._v("如果断点异常出现，并且对应的处理函数被换出了，"),n("em",[t._v("缺页异常")]),t._v(" 触发，缺页异常处理函数被调用")]),t._v(" "),n("li",[t._v("如果缺页异常触发，缺页异常处理函数被换出，"),n("em",[t._v("二级异常")]),t._v(" 触发，"),n("em",[t._v("二级异常处理")]),t._v(" 函数被调用")]),t._v(" "),n("li",[t._v("如果除零异常处理函数触发断点异常，CPU 会试图调用断点处理函数。如果断点处理函数被换出，则 "),n("em",[t._v("缺页异常")]),t._v(" 触发，"),n("em",[t._v("缺页异常处理函数")]),t._v(" 被调用")])]),t._v(" "),n("p",[t._v("事实上，IDT 没有异常处理函数的异常也会遵循这样的规则：当异常触发时，CPU 试图读取相应的 IDT 表项。由于表项为 0，不是合法的 IDT 表项，一个 "),n("em",[t._v("通用保护异常")]),t._v(" 触发。如果我们没有为通用异常定义处理函数的话，另一个通用保护异常触发。由表可得，这会导致二级异常。")]),t._v(" "),n("h3",{attrs:{id:"内核栈溢出"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内核栈溢出"}},[t._v("#")]),t._v(" 内核栈溢出")]),t._v(" "),n("p",[t._v("接着看一下第四个问题：")]),t._v(" "),n("blockquote",[n("p",[t._v("内核栈溢出，触及了 "),n("em",[t._v("防护页")]),t._v("？")])]),t._v(" "),n("p",[t._v("防护页是栈空间底部的一个特殊内存页，用于监测栈溢出的情况。这一页不会映射到物理帧，所以访问它会触发缺页异常而不是静叽叽第污染其他内存。引导器为我们的内核栈配置了防护页，所以栈溢出会触发 "),n("em",[t._v("缺页异常")]),t._v("。")]),t._v(" "),n("p",[t._v("缺页异常出现时，CPU 在 IDT 中查找缺页异常处理函数，并试图把 "),n("RouterLink",{attrs:{to:"/2020/07/27/blog-os-05-cpu-exceptions/#中断栈帧"}},[t._v("中断栈帧")]),t._v(" 压入栈。然而，当前栈指针依然指向不存在的防护页。因此，第二个缺页异常触发，进而触发二级异常（由表可得）。")],1),t._v(" "),n("p",[t._v("现在 CPU 试图调用 "),n("em",[t._v("二级异常处理")]),t._v(" 函数了。但是，CPU 也会为二级异常压入异常栈帧。栈指针依然指向不存在的防护页，所以 "),n("em",[t._v("第三个")]),t._v(" 缺页异常触发，从而触发 "),n("em",[t._v("三级异常")]),t._v(" 和系统重启。因此，我们当前的二级异常处理函数无法在这种情况下避免三级异常。")]),t._v(" "),n("p",[t._v("让我们动手试一下！调用无限递归的函数很容触发内核栈溢出：")]),t._v(" "),n("div",{staticClass:"language-rust line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in src/main.rs")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[no_mangle]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// don't mangle the name of this function")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("_start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("println!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World{}"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("blog_os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("stack_overflow")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stack_overflow")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// for each recursion, the return address is pushed")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// trigger a stack overflow")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stack_overflow")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("…"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// test_main(), println(…), and loop {}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br")])]),n("p",[t._v("在 QEMU 再尝试这份代码可以看到系统再次进入不断重启的状态。")]),t._v(" "),n("p",[t._v("这样的话，我们要如何解决这个问题呢？因为异常栈帧是被 CPU 自动压入的，所以无法屏蔽压入操作。所以我们需要以某种方式确保二级异常出现时栈总是合法的。好在 x86_64 架构为这个问题提供了解决方案。")]),t._v(" "),n("h2",{attrs:{id:"切换栈"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#切换栈"}},[t._v("#")]),t._v(" 切换栈")]),t._v(" "),n("p",[t._v("异常触发时，x86_64 架构可以切换到一个预定义的、已知良好的栈。这个切换发生在硬件级别，所以可以在 CPU 压入异常栈帧前执行。")]),t._v(" "),n("p",[t._v("切换机制实现为一个 "),n("em",[t._v("中断栈表")]),t._v("（IST）。IST 是执行已知良好的栈的 7 个指针表。用 Rust 伪代码表示为：")]),t._v(" "),n("div",{staticClass:"language-rust line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token type-definition class-name"}},[t._v("InterruptStackTable")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    stack_pointers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Option")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StackPointer")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("p",[t._v("对于每个异常处理函数，我们可以为其从 IST 选择一个要切换到的栈，注明在对应 "),n("RouterLink",{attrs:{to:"/2020/07/27/blog-os-05-cpu-exceptions/#中断描述符表"}},[t._v("IDT 表项")]),t._v(" 的 "),n("code",[t._v("stack_pointers")]),t._v(" 字段。例如，我们可以为二级异常选用 IST 的第一个栈。这样每次二级异常触发时 CPU 就会自动切换到这个栈。这个切换会在所有东西压栈前发生，所以能够防止三级异常。")],1),t._v(" "),n("h3",{attrs:{id:"ist-和-tss"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ist-和-tss"}},[t._v("#")]),t._v(" IST 和 TSS")]),t._v(" "),n("p",[t._v("中断栈表（IST）是一个称为 "),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Task_state_segment",target:"_blank",rel:"noopener noreferrer"}},[t._v("任务状态段"),n("OutboundLink")],1),t._v(" （TSS）的旧结构的一部分。TSS 用于保存关于 32 位模式下任务的多种信息（例如，处理寄存器状态），用作硬件上下文切换等场景。然而，64 位模式不再支持硬件上下文切换，TSS 的格式也变得面目全非了。")]),t._v(" "),n("p",[t._v("x86_64 架构下，TSS 不再保存任何任务相关信息。取而代之，它保存了两个栈表（IST 是其中一个）。32 和 64 位模式下 TSS 的仅有共同字段是 "),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Task_state_segment#I.2FO_port_permissions",target:"_blank",rel:"noopener noreferrer"}},[t._v("I/O 端口权限位图"),n("OutboundLink")],1),t._v(" 的指针。")]),t._v(" "),n("p",[t._v("64 位的 TSS 格式如下：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"right"}},[t._v("字段")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("类型")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"right"}},[t._v("（预留）")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[t._v("u32")])])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"right"}},[t._v("特权栈表")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[t._v("[u64; 3]")])])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"right"}},[t._v("（预留）")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[t._v("u64")])])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"right"}},[t._v("终端栈帧")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[t._v("[u64; 7]")])])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"right"}},[t._v("（预留）")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[t._v("u64")])])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"right"}},[t._v("（预留）")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[t._v("u16")])])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"right"}},[t._v("I/O 映射基地址")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("code",[t._v("u16")])])])])]),t._v(" "),n("p",[t._v("特权级别变化时，CPU 会用到特权栈表。例如，CPU 在用户模式下（特权级别 3）触发异常时，CPU 通常会在调用异常处理函数前切换到内核模式（特权级别 0）。那种情况下，CPU 会切换到特权栈表的第 0 个栈（因为 0 是目标特权级别）。我们还没有任何用户模式程序，所以可以暂且忽略这个表。")]),t._v(" "),n("h3",{attrs:{id:"创建-tss"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建-tss"}},[t._v("#")]),t._v(" 创建 TSS")]),t._v(" "),n("p",[t._v("让我们创建一个新的 TSS，在其中断栈表嵌入一个独立的二级异常栈。为此，我们需要一个 TSS 结构体。好在 "),n("code",[t._v("x86_64")]),t._v(" 包已经定义了可用的 "),n("a",{attrs:{href:"https://docs.rs/x86_64/0.12.1/x86_64/structures/tss/struct.TaskStateSegment.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("TaskStateSegment")]),t._v(" 结构体"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("p",[t._v("我们在新的 "),n("code",[t._v("gdt")]),t._v(" 模块创建 TSS（名字后续解释）：")]),t._v(" "),n("div",{staticClass:"language-rust line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in src/lib.rs")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mod")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token module-declaration namespace"}},[t._v("gdt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in src/gdt.rs")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("x86_64"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VirtAddr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("x86_64"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("structures"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("tss"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TaskStateSegment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("lazy_static"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),t._v("lazy_static"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOUBLE_FAULT_IST_INDEX")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("u16")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("lazy_static!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ref")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TSS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TaskStateSegment")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" tss "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TaskStateSegment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        tss"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("interrupt_stack_table"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOUBLE_FAULT_IST_INDEX")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("usize")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STACK_SIZE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("usize")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STACK")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("u8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STACK_SIZE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STACK_SIZE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" stack_start "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VirtAddr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("from_ptr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsafe")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STACK")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" stack_end "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stack_start "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STACK_SIZE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            stack_end\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        tss\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br")])]),n("p",[t._v("因为 Rust 的 const 表达式尚未强大到支持在编译时执行这些初始化操作，所以我们使用了 "),n("code",[t._v("lazy_static")]),t._v("。我们把第 0 个 IST 表项定义为二级异常栈（其他 IST 索引也是可以的）。然后往第 0 项写入二级异常栈。写入的是高地址是因为 x86 的栈是往下扩展的，即从高地址到低地址。")]),t._v(" "),n("p",[t._v("我们还没有实现内存管理，所以没有合适的方法来分配一个新的栈。暂且用一个 "),n("code",[t._v("static mut")]),t._v(" 数组作为栈存储空间。因为编译器无法保证访问可变静态变量时没有竞争状态，所以 "),n("code",[t._v("unsafe")]),t._v(" 是必要的。重要的一点是数组是 "),n("code",[t._v("static mut")]),t._v(" 而不是不可变的 "),n("code",[t._v("static")]),t._v("，否则引导器会将其映射到只读页。我们会在后续文章用合适的栈分配替换上述方案，到那时就不再需要 "),n("code",[t._v("unsafe")]),t._v(" 了。")]),t._v(" "),n("p",[t._v("需要注意的是这个二级异常栈没有防护页用于防止栈溢出。这就是说我们不应该在二级异常处理函数中执行任何很费栈空间的事情，否则栈底下的内存可能会由于栈溢出被污染。")]),t._v(" "),n("h4",{attrs:{id:"加载-tss"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#加载-tss"}},[t._v("#")]),t._v(" 加载 TSS")]),t._v(" "),n("p",[t._v("新的 TSS 创建出来了，我们需要一种方法告诉 CPU 使用它。但是由于（历史原因）TSS 采用分段系统，所以操作起来比较麻烦。我们需要往 "),n("a",{attrs:{href:"http://www.flingos.co.uk/docs/reference/Global-Descriptor-Table/",target:"_blank",rel:"noopener noreferrer"}},[t._v("全局描述符表"),n("OutboundLink")],1),t._v("（GDT）添加一个新的段选择符，而不是直接加载这个表。然后以相应的 GDT 索引调用 "),n("a",{attrs:{href:"https://www.felixcloutier.com/x86/ltr",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("ltr")]),t._v(" 指令"),n("OutboundLink")],1),t._v(" 来加载 TSS。（这也是我们将模块命名为 "),n("code",[t._v("gdt")]),t._v(" 的原因）")]),t._v(" "),n("h3",{attrs:{id:"全局描述符表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#全局描述符表"}},[t._v("#")]),t._v(" 全局描述符表")]),t._v(" "),n("p",[t._v("在分页成为事实上的标准前，全局描述符表（GDT）是用于 "),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/X86_memory_segmentation",target:"_blank",rel:"noopener noreferrer"}},[t._v("内存分段"),n("OutboundLink")],1),t._v(" 的历史遗留产物。64 位模式仍有很多场景需要用到它，例如配置内核/用户模式和加载 TSS 等。")]),t._v(" "),n("p",[t._v("GDT 结构是包含程序的 "),n("em",[t._v("段空间")]),t._v("。分页成为标准前，它在旧架构中用于隔离程序。更多分段详情参见免费的 "),n("a",{attrs:{href:"http://pages.cs.wisc.edu/~remzi/OSTEP/",target:"_blank",rel:"noopener noreferrer"}},[t._v("“Three Easy Pieces” 一书"),n("OutboundLink")],1),t._v(" 中相同命名的章节。虽然 64 位模式不再支持分段，但是 GDT 依然存在，它常见用途有两个：内核空间和用户空间的切换，加载 TSS 结构。")]),t._v(" "),n("h4",{attrs:{id:"创建-gdt"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建-gdt"}},[t._v("#")]),t._v(" 创建 GDT")]),t._v(" "),n("p",[t._v("让我们创建一个静态的 "),n("code",[t._v("GDT")]),t._v("，包含一段静态的 "),n("code",[t._v("TSS")]),t._v("：")]),t._v(" "),n("div",{staticClass:"language-rust line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in src/gdt.rs")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("x86_64"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("structures"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("gdt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GlobalDescriptorTable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Descriptor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("lazy_static!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ref")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GDT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GlobalDescriptorTable")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" gdt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GlobalDescriptorTable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        gdt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add_entry")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Descriptor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("kernel_code_segment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        gdt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add_entry")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Descriptor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tss_segment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TSS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        gdt\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br")])]),n("p",[t._v("因为 Rust 的常量表达式还不足够强大，所以 "),n("code",[t._v("lazy_static")]),t._v(" 再次被用上。我们用一个代码段和 TSS 段创建了一个新的 GDT。")]),t._v(" "),n("h4",{attrs:{id:"加载-gdt"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#加载-gdt"}},[t._v("#")]),t._v(" 加载 GDT")]),t._v(" "),n("p",[t._v("为了加载 GDT，我们创建一个新的 "),n("code",[t._v("gdt::init")]),t._v(" 函数，会被 "),n("code",[t._v("init")]),t._v(" 函数调用：")]),t._v(" "),n("div",{staticClass:"language-rust line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in src/gdt.rs")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GDT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in src/lib.rs")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("gdt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("interrupts"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("init_idt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br")])]),n("p",[t._v("现在 GDT 被加载了（因为 "),n("code",[t._v("_start")]),t._v(" 函数调用了 "),n("code",[t._v("init")]),t._v("），但是依然栈溢出导致不断重启。")]),t._v(" "),n("h3",{attrs:{id:"最后一步"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#最后一步"}},[t._v("#")]),t._v(" 最后一步")]),t._v(" "),n("p",[t._v("问题出在由于段寄存器和 TSS 寄存器依然存储旧 GDT 的值，新的 GDT 段尚未激活。我们还需要修改二级异常的 IDT 表项，让其使用新的栈。")]),t._v(" "),n("p",[t._v("总而言之，我们只需要执行以下操作：")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("重新加载代码段寄存器")]),t._v("：我们更改了 GDT，所以需要重新加载代码段寄存器 "),n("code",[t._v("cs")]),t._v("。因为旧的段选择器现在可能指向一个不同的 GDT 描述符（例如一个 TSS 描述符），所以这项操作是必要的")]),t._v(" "),n("li",[n("strong",[t._v("加载 TSS")]),t._v("：虽然我们加载了包含 TSS 选择器的 GDT，但是仍然需要告诉 CPU 去使用那个 TSS")]),t._v(" "),n("li",[n("strong",[t._v("更新 IDT 表项")]),t._v("：加载了 TSS 后，CPU 能够访问一个合法的中断栈表（IST）。然后通过修改二级异常 IDT 表项来告诉 CPU 这时应该使用新的二级异常栈了。")])]),t._v(" "),n("p",[t._v("前两步需要访问到 "),n("code",[t._v("gdt::init")]),t._v(" 函数中的 "),n("code",[t._v("code_selector")]),t._v(" 和 "),n("code",[t._v("tss_selector")]),t._v(" 变量。为此，我们将它们变成新的 "),n("code",[t._v("Selectors")]),t._v(" 结构的一部分：")]),t._v(" "),n("div",{staticClass:"language-rust line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in src/gdt.rs")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("x86_64"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("structures"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("gdt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SegmentSelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("lazy_static!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ref")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GDT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GlobalDescriptorTable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Selectors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" gdt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GlobalDescriptorTable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" code_selector "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gdt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add_entry")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Descriptor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("kernel_code_segment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" tss_selector "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gdt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add_entry")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Descriptor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tss_segment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TSS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gdt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Selectors")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" code_selector"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tss_selector "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token type-definition class-name"}},[t._v("Selectors")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    code_selector"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SegmentSelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    tss_selector"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SegmentSelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br")])]),n("p",[t._v("现在就可以使用 "),n("code",[t._v("Selectors")]),t._v(" 来重新加载 "),n("code",[t._v("cs")]),t._v(" 段寄存器和加载我们的 "),n("code",[t._v("TSS")]),t._v(" 了：")]),t._v(" "),n("div",{staticClass:"language-rust line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in src/gdt.rs")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("x86_64"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("instructions"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("segmentation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),t._v("set_cs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("x86_64"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("instructions"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("tables"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),t._v("load_tss"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GDT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsafe")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_cs")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GDT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code_selector"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("load_tss")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GDT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tss_selector"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br")])]),n("p",[t._v("使用 "),n("a",{attrs:{href:"https://docs.rs/x86_64/0.12.1/x86_64/instructions/segmentation/fn.set_cs.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("set_cs")]),n("OutboundLink")],1),t._v(" 重新加载代码段寄存器，使用 "),n("a",{attrs:{href:"https://docs.rs/x86_64/0.12.1/x86_64/instructions/tables/fn.load_tss.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("load_tss")]),n("OutboundLink")],1),t._v(" 加载 TSS。函数标识为 "),n("code",[t._v("unsafe")]),t._v("，所以需要用 "),n("code",[t._v("unsafe")]),t._v(" 块包裹它们。原因是加载非法的选择器可能会破坏内存安全。")]),t._v(" "),n("p",[t._v("加载了合法的 TSS 和中断栈表后，我们现在可以设置 IDT 里的二级异常处理函数的栈索引了：")]),t._v(" "),n("div",{staticClass:"language-rust line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in src/interrupts.rs")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("crate")]),n("span",{pre:!0,attrs:{class:"token module-declaration namespace"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("gdt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("lazy_static!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ref")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IDT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptDescriptorTable")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" idt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptDescriptorTable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        idt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("breakpoint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_handler_fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("breakpoint_handler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsafe")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            idt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("double_fault"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_handler_fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("double_fault_handler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_stack_index")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("gdt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOUBLE_FAULT_IST_INDEX")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// new")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        idt\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br")])]),n("p",[t._v("因为调用者必须确保使用的索引合法且尚未被其他异常使用，所以 "),n("code",[t._v("set_stack_index")]),t._v(" 方法是不安全的。")]),t._v(" "),n("p",[t._v("完工！无论何时触发二级异常，现在 CPU 应该都能切换到二级异常栈。因此，我们能够捕获到 "),n("em",[t._v("所有")]),t._v(" 二级异常，包括内核栈溢出了。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(514),alt:"QEMU 打印  并输出异常栈帧"}})]),t._v(" "),n("p",[t._v("从此以后，我们应该绝不会再看到三级异常了。为了确保不会无意破坏这点，我们应该为其添加个测试函数。")]),t._v(" "),n("h2",{attrs:{id:"栈溢出测试"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#栈溢出测试"}},[t._v("#")]),t._v(" 栈溢出测试")]),t._v(" "),n("p",[t._v("为了测试新的 "),n("code",[t._v("gdt")]),t._v(" 模块，确保栈溢出时正常调用二级异常处理函数，我们可以添加一个集成测试。基本做法是在测试函数里面触发二级异常，然后验证二级异常处理函数被调用了。")]),t._v(" "),n("p",[t._v("先搭个框：")]),t._v(" "),n("div",{staticClass:"language-rust line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in tests/stack_overflow.rs")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#![no_std]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#![no_main]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("core"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("panic"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PanicInfo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[no_mangle]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("_start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("unimplemented!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[panic_handler]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("panic")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("info"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PanicInfo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("blog_os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test_panic_handler")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("info"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br")])]),n("p",[t._v("和 "),n("code",[t._v("panic_handler")]),t._v(" 测试类似，这个测试 "),n("RouterLink",{attrs:{to:"/2020/07/27/blog-os-04-testing/#无约束测试"}},[t._v("不需要借助 test harness")]),t._v(" 运行。理由是二级异常触发后程序无法继续执行，所以多个测试用处不大。为测试禁用 test harness，在 "),n("code",[t._v("Cargo.toml")]),t._v(" 添加一下片段：")],1),t._v(" "),n("div",{staticClass:"language-toml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-toml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in Cargo.toml")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key property"}},[t._v("name")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stack_overflow"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key property"}},[t._v("harness")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("p",[t._v("现在执行 "),n("code",[t._v("cargo test --test stack_overflow")]),t._v(" 应该能够成功编译。由于 "),n("code",[t._v("unimplemented")]),t._v(" 宏触发 panic，所以测试必然失败。")]),t._v(" "),n("h3",{attrs:{id:"实现-start"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现-start"}},[t._v("#")]),t._v(" 实现 "),n("code",[t._v("_start")])]),t._v(" "),n("p",[n("code",[t._v("_start")]),t._v(" 函数的实现如下：")]),t._v(" "),n("div",{staticClass:"language-rust line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in tests/stack_overflow.rs")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("blog_os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),t._v("serial_print"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[no_mangle]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("_start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("serial_print!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stack_overflow::stack_overflow...\\t"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("blog_os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("gdt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("init_test_idt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// trigger a stack overflow")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stack_overflow")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("panic!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Execution continued after stack overflow"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token attribute attr-name"}},[t._v("#[allow(unconditional_recursion)]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("stack_overflow")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stack_overflow")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// for each recursion, the return address is pushed")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("volatile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Volatile")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// prevent tail recursion optimizations")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br")])]),n("p",[t._v("调用 "),n("code",[t._v("gdt::init")]),t._v(" 函数来初始化一个新的 GDT。我们调用紧接会解释的 "),n("code",[t._v("init_test_idt")]),t._v(" 函数而不是 "),n("code",[t._v("interrupts::init_idt")]),t._v(" 函数。理由是我们想要注册一个自定义的二级异常处理函数，这个函数调用 "),n("code",[t._v("exit_qemu(QemuExitCode::Success)")]),t._v(" 而不是 panic。")]),t._v(" "),n("p",[n("code",[t._v("stack_overflow")]),t._v(" 函数和 "),n("code",[t._v("main.rs")]),t._v(" 的几乎完全一样。仅有的区别是我们使用 "),n("a",{attrs:{href:"https://docs.rs/volatile/0.2.6/volatile/struct.Volatile.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("Volatile")]),n("OutboundLink")],1),t._v(" 类型在函数末尾执行额外的 "),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Volatile_(computer_programming)",target:"_blank",rel:"noopener noreferrer"}},[t._v("易失"),n("OutboundLink")],1),t._v(" 读操作，避免编译器称为 "),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Tail_call",target:"_blank",rel:"noopener noreferrer"}},[n("em",[t._v("尾部调用消除")]),n("OutboundLink")],1),t._v(" 的优化。除了其他操作，这个优化允许编译器把最后语句为递归函数调用的函数转化为一个常规循环。这样的话，函数调用就不会触发额外栈帧的分配，也就使得栈使用率保持不变了。")]),t._v(" "),n("p",[t._v("当前场景下，我们需要栈溢出，所以在函数末尾添加一个随意的易变读操作，使得编译器无法移除。这样一来，函数就不再 "),n("em",[t._v("尾部递归")]),t._v("，也就避免了到循环的转换。我们还添加 "),n("code",[t._v("allow(unconditional_recursion)")]),t._v(" 属性用于静默编译关于函数无限递归的警告。")]),t._v(" "),n("h3",{attrs:{id:"测试的-idt"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#测试的-idt"}},[t._v("#")]),t._v(" 测试的 IDT")]),t._v(" "),n("p",[t._v("如上所述，测试需要附带自定义二级异常处理函数的 IDT。具体实现如下：")]),t._v(" "),n("div",{staticClass:"language-rust line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in tests/stack_overflow.rs")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("lazy_static"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),t._v("lazy_static"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("x86_64"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("structures"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("idt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptDescriptorTable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("lazy_static!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ref")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TEST_IDT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptDescriptorTable")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" idt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptDescriptorTable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsafe")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            idt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("double_fault\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_handler_fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test_double_fault_handler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_stack_index")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("blog_os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("gdt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOUBLE_FAULT_IST_INDEX")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        idt\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("init_test_idt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TEST_IDT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br")])]),n("p",[t._v("这个实现和 "),n("code",[t._v("interrupts.rs")]),t._v(" 的常规 IDT 非常类似。和常规 IDT 类似，我们为二级异常处理函数在 IST 设置栈索引，用于切换到独立的栈。"),n("code",[t._v("init_test_idt")]),t._v(" 函数借助 "),n("code",[t._v("load")]),t._v(" 方法把 IDT 加载到 CPU。")]),t._v(" "),n("h3",{attrs:{id:"二级异常处理函数-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二级异常处理函数-2"}},[t._v("#")]),t._v(" 二级异常处理函数")]),t._v(" "),n("p",[t._v("二级异常处理函数是缺的最后一块了。实现如下：")]),t._v(" "),n("div",{staticClass:"language-rust line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-rust"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in tests/stack_overflow.rs")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("blog_os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("exit_qemu"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QemuExitCode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" serial_println"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("x86_64"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("structures"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),t._v("idt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptStackFrame")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x86-interrupt"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("test_double_fault_handler")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    _stack_frame"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mut")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptStackFrame")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    _error_code"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("u64")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("->")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("serial_println!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[ok]"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("exit_qemu")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QemuExitCode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Success")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("loop")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br")])]),n("p",[t._v("二级异常处理函数调用时，我们以成功状态码退出 QEMU，标记测试通过。由于集成测试是完全独立的可执行文件，我们需要在测试文件的顶部设置 "),n("code",[t._v("#![feature(abi_x86_interrupt)]")]),t._v(" 属性。")]),t._v(" "),n("p",[t._v("现在通过 "),n("code",[t._v("cargo test --test stack_overflow")]),t._v(" 命令执行测试（或者 "),n("code",[t._v("cargo test")]),t._v(" 命令执行所有测试）。如预期那样，我们在控制台可以看到 "),n("code",[t._v("stack_overflow... [ok]")]),t._v(" 输出。尝试注释掉 "),n("code",[t._v("set_stack_index")]),t._v(" 行：它应该会触发测试失败。")]),t._v(" "),n("h2",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),n("p",[t._v("通过本文，我们了解到二级异常的定义及其触发条件。我们添加一个基本的二级异常处理函数，在函数内打印出错误信息，并为其添加一个集成测试。")]),t._v(" "),n("p",[t._v("我们还实现了二级异常触发时支持硬件切换栈，使其在栈溢出时仍能工作。实现过程中，我们认识了任务状态段（TSS），内置的中断栈表（IST）和用于旧架构实现分段的全局描述符表（GDT）。")]),t._v(" "),n("h2",{attrs:{id:"下篇预告"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#下篇预告"}},[t._v("#")]),t._v(" 下篇预告")]),t._v(" "),n("p",[t._v("下篇文章将会讲解如何处理来自计时器、键盘和网络控制器等外部设备的中断。这些硬件中断和异常非常类似，例如它们通过 IDT 分发。但是和异常不同的是，他们不是由 CPU 直接触发的。"),n("em",[t._v("中断控制器")]),t._v(" 收集这些中断并根据优先级把他们推送给 CPU。下篇文章将会探索 "),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Intel_8259",target:"_blank",rel:"noopener noreferrer"}},[t._v("Intel 8259"),n("OutboundLink")],1),t._v("（“PIC”）中断控制器，并学习如何实现键盘支持。")])])}),[],!1,null,null,null);s.default=e.exports}}]);